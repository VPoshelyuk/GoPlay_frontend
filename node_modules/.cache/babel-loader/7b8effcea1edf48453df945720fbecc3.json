{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventForm.js\";\nimport React from \"react\";\nimport MaskedInput from 'react-maskedinput';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      event_pic: null,\n      price: \"Free\",\n      datetime: \"\",\n      players_per_team: \"\",\n      max_num_of_teams: \"\",\n      description: \"\",\n      loaded: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addPic = e => {\n      // console.log(e.target.files)\n      this.setState({\n        event_pic: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const fD = new FormData();\n      fD.append(\"name\", this.state.name);\n      fD.append(\"price\", \"Free\");\n      fD.append(\"datetime\", this.state.datetime);\n      fD.append(\"event_pic\", this.state.event_pic);\n      fD.append(\"players_per_team\", this.state.players_per_team);\n      fD.append(\"max_num_of_teams\", this.state.max_num_of_teams);\n      fD.append(\"description\", this.state.description);\n      console.log(this.state.event_pic);\n      fetch(\"http://localhost:3000/api/v1/events\", {\n        method: \"POST\",\n        body: fD\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n      });\n    };\n  }\n\n  // componentDidMount(){\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field required \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"price\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"datetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Time of the Event\"), React.createElement(DateTimePicker, {\n      required: true,\n      className: \"text-input datetime\",\n      disableClock: true,\n      onChange: datetime => {\n        this.setState({\n          datetime\n        });\n        console.log(this.state.datetime);\n      },\n      value: this.state.datetime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"players_per_team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Players Per Team\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"players_per_team\",\n      name: \"players_per_team\",\n      value: this.state.players_per_team,\n      onChange: this.handleChange,\n      required: true,\n      type: \"number\",\n      min: \"2\",\n      max: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"max_num_of_teams\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Max Team Number\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"max_num_of_teams\",\n      name: \"max_num_of_teams\",\n      value: this.state.max_num_of_teams,\n      onChange: this.handleChange,\n      type: \"number\",\n      min: \"2\",\n      max: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"event_pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Event Picture\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"event_pic\",\n      name: \"event_pic\",\n      onChange: this.addPic,\n      accept: \"image/*\",\n      required: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      cols: \"50\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    players_per_team: state.userReducer.players_per_team,\n    password: state.userReducer.password\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(SignUp);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventForm.js"],"names":["React","MaskedInput","DateTimePicker","Redirect","connect","setUser","SignUp","Component","state","name","event_pic","price","datetime","players_per_team","max_num_of_teams","description","loaded","handleChange","event","setState","target","value","addPic","e","files","handleSubmit","preventDefault","fD","FormData","append","console","log","fetch","method","body","then","res","json","response","render","msp","currentUser","userReducer","password"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaskedInput from 'react-maskedinput'\nimport DateTimePicker from 'react-datetime-picker'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\n\nclass SignUp extends React.Component{\n    state = {\n        name: \"\",\n        event_pic: null,\n        price: \"Free\",\n        datetime: \"\",\n        players_per_team: \"\",\n        max_num_of_teams: \"\",\n        description: \"\",\n        loaded: false\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n    \n    addPic = (e) => {\n        // console.log(e.target.files)\n        this.setState({\n            event_pic: e.target.files[0],\n        });\n    }\n\n\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const fD = new FormData()\n        fD.append(\"name\", this.state.name)\n        fD.append(\"price\", \"Free\")\n        fD.append(\"datetime\", this.state.datetime)\n        fD.append(\"event_pic\", this.state.event_pic)\n        fD.append(\"players_per_team\", this.state.players_per_team)\n        fD.append(\"max_num_of_teams\", this.state.max_num_of_teams)\n        fD.append(\"description\", this.state.description)\n        console.log(this.state.event_pic)\n        fetch(\"http://localhost:3000/api/v1/events\", {\n            method: \"POST\",\n            body: fD\n            })\n            .then(res => res.json())\n            .then(response => {console.log(response)\n            })\n    }\n\n    // componentDidMount(){\n    // }\n\n    render(){\n        return (\n        <div className=\"signup-main\">\n            <form onSubmit={this.handleSubmit} className='form'>\n            <p className='field required '>\n                <label className='label required' htmlFor='name'>Name</label>\n                <input className='text-input' id='name' name='name' value={this.state.name} onChange={this.handleChange} required type='text'/>\n            </p>\n            <p className='field required half'>\n                <label className='label required' htmlFor='price'>Price</label>\n                <input className='text-input' id='price' name='price' value={this.state.price} onChange={this.handleChange} required type='text'/>\n            </p>\n            <div className='field required half'>\n                <label className='label' htmlFor='datetime'>Time of the Event</label>\n                <DateTimePicker\n                    required={true}\n                    className='text-input datetime'\n                    disableClock={true}\n                    onChange={datetime => {this.setState({ datetime });console.log(this.state.datetime)}}\n                    value={this.state.datetime}\n                />\n                {/* <input className='text-input' id='datetime' name='datetime' value={this.state.datetime} onChange={this.handleChange} required type='datetime' /> */}\n            </div>\n            <p className='field required half'>\n                <label className='label' htmlFor='players_per_team'>Players Per Team</label>\n                <input className='text-input' id='players_per_team' name='players_per_team' value={this.state.players_per_team} onChange={this.handleChange} required type='number' min=\"2\" max=\"15\" />\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='max_num_of_teams'>Max Team Number</label>\n                <input className='text-input' id='max_num_of_teams' name='max_num_of_teams' value={this.state.max_num_of_teams} onChange={this.handleChange} type='number' min=\"2\" max=\"32\"/>\n            </p>\n            <p className='field required'>\n                <label className='label' htmlFor='event_pic'>Event Picture</label>\n                <input className='text-input' id='event_pic' name='event_pic' onChange={this.addPic} accept=\"image/*\" required type='file'/>\n            </p>\n            <p className='field'>\n                <label className='label' htmlFor='description'>Description</label>\n                <textarea className='textarea' cols='50' id='description' name='description' value={this.state.description} onChange={this.handleChange} rows='4'></textarea>\n            </p>\n            <p className='field'>\n                <input className='button' type='submit' value='Sign Up' />\n            </p>\n            </form>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n      currentUser: state.userReducer.currentUser,\n      players_per_team: state.userReducer.players_per_team,\n      password: state.userReducer.password\n    }\n}\n\nexport default connect(msp, { setUser })(SignUp)\n"]},"metadata":{},"sourceType":"module"}