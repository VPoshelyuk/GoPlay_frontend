{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass EventCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: null,\n      added: false,\n      viewed: false\n    };\n\n    this.handleParticipateInEvent = () => {\n      fetch(\"http://localhost:3000/api/v1/team_events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          team_id: this.props.myTeam.id\n        })\n      }).then(res => res.json()).then(() => {\n        this.setState({\n          added: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.status_check === 1) {\n      fetch(\"http://localhost:3000/api/v1/status_check\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          user_id: this.props.currentUser.user.data.attributes.id\n        })\n      }).then(res => res.json()).then(console.log);\n    }\n  } // handleViewEvent = () => {\n  //     // this.props.setevent(this.props.event)\n  //     this.setState({\n  //         viewed: true\n  //     })\n  // }\n\n\n  render() {\n    console.log(this.props, this.state);\n    if (this.state.added && this.props.myGroup) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }); // if(this.state.viewed){\n    //     this.setState({\n    //         viewed: false\n    //     })\n    //     return <Redirect to={`/event/${this.props.event.id}`} />\n    // }\n    // debugger\n\n    return React.createElement(\"div\", {\n      className: \"team_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"team_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.event.name), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.event.price === 0 ? \"Free\" : this.props.event.price), React.createElement(\"img\", {\n      className: \"team_logo\",\n      src: this.props.event.pic_path,\n      alt: \"event_pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"team_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.event.description), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.event.players_per_team), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.event.max_number_of_teams), this.props.myTeam !== undefined && this.props.myTeam !== null ? this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined ? React.createElement(\"button\", {\n      onClick: this.handleParticipateInEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Count my team in!\") : this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) && this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"radio-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-one\",\n      name: \"selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"option-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"I'm Going!\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-two\",\n      name: \"selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"option-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Maybe\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-three\",\n      name: \"selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"option-three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Nope\")), React.createElement(\"button\", {\n      onClick: this.handleUnparticipateInEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Sorry, my team can't make it\")) : React.createElement(\"button\", {\n      onClick: this.handleChangeMyStatusOnEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"I'll go/maybe/no\") : this.state.added ? this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"radio-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-one\",\n      name: \"selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"option-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"I'm Going!\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-two\",\n      name: \"selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"option-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Maybe\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-three\",\n      name: \"selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"option-three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Nope\")), React.createElement(\"button\", {\n      onClick: this.handleUnparticipateInEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Sorry, my team can't make it\")) : React.createElement(\"button\", {\n      onClick: this.handleChangeMyStatusOnEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"I'll go/maybe/no\") : null);\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.currentTeam,\n    myGroup: state.teamReducer.currentGroup // sportId: state.teamReducer.currentSportId\n\n  };\n}\n\nexport default connect(msp)(EventCard);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js"],"names":["React","Fragment","Redirect","connect","EventCard","Component","state","status","added","viewed","handleParticipateInEvent","fetch","method","headers","body","JSON","stringify","event_id","props","event","id","team_id","myTeam","then","res","json","setState","componentDidMount","status_check","user_id","currentUser","user","data","attributes","console","log","render","myGroup","name","price","pic_path","description","players_per_team","max_number_of_teams","undefined","events","find","marginTop","admin","handleUnparticipateInEvent","handleChangeMyStatusOnEvent","msp","userReducer","teamReducer","currentTeam","currentGroup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE5B;AACHC,MAAAA,MAAM,EAAE,IADL;AAEHC,MAAAA,KAAK,EAAE,KAFJ;AAGHC,MAAAA,MAAM,EAAE;AAHL,KAF4B;;AAAA,SAQnCC,wBARmC,GAQR,MAAM;AAC7BC,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFqC;AAM9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EADV;AAEjBC,UAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,MAAX,CAAkBF;AAFV,SAAf;AANwC,OAA7C,CAAL,CAWCG,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYM,MAAK;AAEP,aAAKG,QAAL,CAAc;AACVlB,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH,OAjBD;AAmBH,KA5BkC;AAAA;;AA8BnCmB,EAAAA,iBAAiB,GAAE;AACf,QAAG,KAAKT,KAAL,CAAWU,YAAX,KAA4B,CAA/B,EAAiC;AAC7BjB,MAAAA,KAAK,CAAC,2CAAD,EAA8C;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAF0C;AAMnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EADV;AAEjBS,UAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,UAAjC,CAA4Cb;AAFpC,SAAf;AAN6C,OAA9C,CAAL,CAWCG,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMW,OAAO,CAACC,GAZd;AAaH;AACJ,GA9CkC,CAgDnC;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAE;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB,EAAwB,KAAKZ,KAA7B;AACA,QAAG,KAAKA,KAAL,CAAWE,KAAX,IAAoB,KAAKU,KAAL,CAAWmB,OAAlC,EAA0C,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CAFtC,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,IAA5C,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,KAAjB,KAA2B,CAA3B,GAA+B,MAA/B,GAAwC,KAAKrB,KAAL,CAAWC,KAAX,CAAiBoB,KAAvF,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWC,KAAX,CAAiBqB,QAAjD;AAA2D,MAAA,GAAG,EAAC,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,WAA5C,CAJJ,EAKI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKvB,KAAL,CAAWC,KAAX,CAAiBuB,gBAA/C,CALJ,EAMI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKxB,KAAL,CAAWC,KAAX,CAAiBwB,mBAA/C,CANJ,EAOK,KAAKzB,KAAL,CAAWI,MAAX,KAAsBsB,SAAtB,IAAmC,KAAK1B,KAAL,CAAWI,MAAX,KAAsB,IAAzD,GACG,KAAKJ,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6BY,MAA7B,KAAwCD,SAAxC,IAAqD,KAAK1B,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6BY,MAA7B,CAAoCC,IAApC,CAAyC3B,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,EAAhF,MAAwFwB,SAA7I,GACI;AAAQ,MAAA,OAAO,EAAE,KAAKlC,wBAAtB;AAAgD,MAAA,KAAK,EAAE;AAACqC,QAAAA,SAAS,EAAE;AAAZ,OAAvD;AAA4E,MAAA,SAAS,EAAC,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,GAGI,KAAK7B,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6BY,MAA7B,CAAoCC,IAApC,CAAyC3B,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,EAAhF,KAAuF,KAAKF,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6Be,KAA7B,CAAmC5B,EAAnC,KAA0C,KAAKF,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,UAAjC,CAA4Cb,EAA7K,GACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,cAAvB;AAAsC,MAAA,IAAI,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAO,MAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAK6B,0BAAtB;AAAkD,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAzD;AAA8E,MAAA,SAAS,EAAC,aAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCATJ,CADJ,GAaI;AAAQ,MAAA,OAAO,EAAE,KAAKG,2BAAtB;AAAmD,MAAA,KAAK,EAAE;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAA1D;AAA+E,MAAA,SAAS,EAAC,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBX,GAmBG,KAAKzC,KAAL,CAAWE,KAAX,GACI,KAAKU,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6Be,KAA7B,CAAmC5B,EAAnC,KAA0C,KAAKF,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,UAAjC,CAA4Cb,EAAtF,GACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,cAAvB;AAAsC,MAAA,IAAI,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAO,MAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAK6B,0BAAtB;AAAkD,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAzD;AAA8E,MAAA,SAAS,EAAC,aAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCATJ,CADJ,GAaI;AAAQ,MAAA,OAAO,EAAE,KAAKG,2BAAtB;AAAmD,MAAA,KAAK,EAAE;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAA1D;AAA+E,MAAA,SAAS,EAAC,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdR,GAgBI,IA1CZ,CADA;AAgDH;;AAjHkC;;AAoHvC,SAASI,GAAT,CAAa7C,KAAb,EAAmB;AACf,SAAO;AACHwB,IAAAA,WAAW,EAAExB,KAAK,CAAC8C,WAAN,CAAkBtB,WAD5B;AAEHR,IAAAA,MAAM,EAAEhB,KAAK,CAAC+C,WAAN,CAAkBC,WAFvB;AAGHjB,IAAAA,OAAO,EAAE/B,KAAK,CAAC+C,WAAN,CAAkBE,YAHxB,CAIH;;AAJG,GAAP;AAMH;;AAED,eAAepD,OAAO,CAACgD,GAAD,CAAP,CAAa/C,SAAb,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass EventCard extends React.Component{\n\n    state= {\n        status: null,\n        added: false,\n        viewed: false\n    }\n\n    handleParticipateInEvent = () => {\n        fetch(\"http://localhost:3000/api/v1/team_events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                team_id: this.props.myTeam.id\n            })\n            })\n        .then(res => res.json())\n        .then(() =>{\n\n            this.setState({\n                added: true\n            })\n        }\n        )\n    }\n\n    componentDidMount(){\n        if(this.props.status_check === 1){\n            fetch(\"http://localhost:3000/api/v1/status_check\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                user_id: this.props.currentUser.user.data.attributes.id\n            })\n            })\n            .then(res => res.json())\n            .then(console.log)\n        }\n    }\n\n    // handleViewEvent = () => {\n    //     // this.props.setevent(this.props.event)\n    //     this.setState({\n    //         viewed: true\n    //     })\n    // }\n\n    render(){\n        console.log(this.props, this.state)\n        if(this.state.added && this.props.myGroup)return <Redirect to=\"/dashboard\" />\n        // if(this.state.viewed){\n        //     this.setState({\n        //         viewed: false\n        //     })\n        //     return <Redirect to={`/event/${this.props.event.id}`} />\n        // }\n        // debugger\n        return (\n        <div className=\"team_card\">\n            <h1 className=\"team_name\">{this.props.event.name}</h1>\n            <p className=\"team_location\">{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n            <img className=\"team_logo\" src={this.props.event.pic_path} alt=\"event_pic\" />\n            <h2 className=\"team_desc\">{this.props.event.description}</h2>\n            <p className=\"team_location\">{this.props.event.players_per_team}</p>\n            <p className=\"team_location\">{this.props.event.max_number_of_teams}</p>\n            {this.props.myTeam !== undefined && this.props.myTeam !== null?\n                this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n                    <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count my team in!</button>\n                    :\n                    this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) && this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n                        <Fragment>\n                            <div class=\"radio-group\">\n                                <input type=\"radio\" id=\"option-one\" name=\"selector\" />\n                                <label for=\"option-one\">I'm Going!</label>\n                                <input type=\"radio\" id=\"option-two\" name=\"selector\" />\n                                <label for=\"option-two\">Maybe</label>\n                                <input type=\"radio\" id=\"option-three\" name=\"selector\" />\n                                <label for=\"option-three\">Nope</label>\n                            </div>\n                            <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n                        </Fragment>\n                        :\n                        <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n                :\n                this.state.added ?\n                    this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n                        <Fragment>\n                            <div class=\"radio-group\">\n                                <input type=\"radio\" id=\"option-one\" name=\"selector\" />\n                                <label for=\"option-one\">I'm Going!</label>\n                                <input type=\"radio\" id=\"option-two\" name=\"selector\" />\n                                <label for=\"option-two\">Maybe</label>\n                                <input type=\"radio\" id=\"option-three\" name=\"selector\" />\n                                <label for=\"option-three\">Nope</label>\n                            </div>\n                            <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n                        </Fragment>\n                        :\n                        <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n                    :\n                    null\n\n            }\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.currentTeam,\n        myGroup: state.teamReducer.currentGroup\n        // sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(EventCard)"]},"metadata":{},"sourceType":"module"}