{"ast":null,"code":"import _objectSpread from \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addEvent, addAvailableEvent } from './redux/actions/user_actions';\nimport { setTeam } from './redux/actions/team_actions';\n\nclass EventCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: undefined,\n      user_event: undefined,\n      added: false,\n      viewed: false\n    };\n\n    this.handleParticipateInEvent = () => {\n      fetch(\"http://localhost:3000/api/v1/team_events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          team_id: this.props.myTeam.id\n        })\n      }).then(res => res.json()).then(() => {\n        this.props.setTeam(_objectSpread({}, this.props.myTeam, {\n          attributes: _objectSpread({}, this.props.myTeam.attributes, {\n            events: [...this.props.myTeam.attributes.events, this.props.event]\n          })\n        }));\n        this.props.addEvent({\n          attributes: _objectSpread({}, this.props.event, {\n            teams: [...this.props.event.teams, this.props.myTeam.attributes]\n          })\n        });\n        this.setState({\n          added: true\n        });\n      });\n    };\n\n    this.handleUnparticipateInEvent = () => {\n      fetch(\"http://localhost:3000/api/v1/delete_by_team_event_ids\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          team_id: this.props.myTeam.id\n        })\n      }).then(res => res.json()).then(() => {\n        this.props.setTeam(_objectSpread({}, this.props.myTeam, {\n          attributes: _objectSpread({}, this.props.myTeam.attributes, {\n            events: this.props.myTeam.attributes.events.filter(event => event.id !== this.props.event.id)\n          })\n        }));\n        this.props.addAvailableEvent({\n          attributes: _objectSpread({}, this.props.event, {\n            teams: [...this.props.event.teams, this.props.myTeam.attributes]\n          })\n        });\n        this.setState({\n          added: true\n        });\n      });\n    };\n\n    this.setAttendance = e => {\n      fetch(`http://localhost:3000/api/v1/user_events/${this.state.user_event}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          user_id: this.props.currentUser.user.data.attributes.id,\n          status: e.target.value\n        })\n      }).then(res => res.json()).then(console.log);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.status_check === 1 && this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id)) {\n      this.props.myTeam.attributes.users.forEach(user => {\n        fetch(\"http://localhost:3000/api/v1/status_check\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify({\n            event_id: this.props.event.id,\n            user_id: user.id\n          })\n        }).then(res => res.json()).then(resp => {\n          switch (resp.status) {\n            case 'Going':\n              this.going = {};\n              this.going += user.id;\n              break;\n\n            case 'Maybe':\n              this.going = {};\n              this.going += user.id;\n              break;\n\n            case 'Nope':\n              this.going = {};\n              this.going += user.id;\n              break;\n\n            default:\n              break;\n          }\n        }).then(() => {\n          console.log(this.going[0]);\n        });\n      });\n      fetch(\"http://localhost:3000/api/v1/status_check\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          user_id: this.props.currentUser.user.data.attributes.id\n        })\n      }).then(res => res.json()).then(resp => this.setState({\n        status: resp.status,\n        user_event: resp.id\n      }, () => {\n        const selector = document.querySelectorAll(`input[name=selector${this.props.event.id}]`);\n        console.log(selector);\n\n        switch (resp.status) {\n          case 'Going':\n            selector[0].checked = \"true\";\n            break;\n\n          case 'Maybe':\n            selector[1].checked = \"true\";\n            break;\n\n          case 'Nope':\n            selector[2].checked = \"true\";\n            break;\n\n          default:\n            break;\n        }\n\n        selector.value = resp.status;\n        console.log(selector.value);\n      }));\n    } else {\n      this.setState({\n        status: null\n      });\n    }\n  } // handleViewEvent = () => {\n  //     // this.props.setevent(this.props.event)\n  //     this.setState({\n  //         viewed: true\n  //     })\n  // }\n\n\n  render() {\n    console.log(this.props, this.state);\n    if (this.state.added && this.props.myGroup) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }); // if(this.state.viewed){\n    //     this.setState({\n    //         viewed: false\n    //     })\n    //     return <Redirect to={`/event/${this.props.event.id}`} />\n    // }\n    // debugger\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.props.dash_style ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      style: {\n        backgroundImage: `url(${this.props.event.pic_path})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"figcaption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.props.event.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.props.event.price === 0 ? \"Free\" : this.props.event.price)))) : !this.state.added ? React.createElement(\"div\", {\n      className: this.props.myTeam !== undefined && this.props.myTeam !== null ? \"irregular_event_card\" : \"regular_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group_logo_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"group_logo\",\n      src: this.props.event.pic_path,\n      alt: \"event_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"group_location\",\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.props.event.price === 0 ? \"Free\" : this.props.event.price), React.createElement(\"p\", {\n      className: \"event_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Players per team: \", this.props.event.players_per_team), React.createElement(\"p\", {\n      className: \"event_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Number of teams: \", this.props.event.max_number_of_teams), React.createElement(\"p\", {\n      className: \"team_locatevent_locationion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.props.event.pretty_time)), React.createElement(\"div\", {\n      className: \"group_info_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.props.event.name), React.createElement(\"h2\", {\n      className: \"group_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.props.event.description), this.props.myTeam !== undefined && this.props.myTeam !== null ? this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined ? React.createElement(\"button\", {\n      onClick: this.handleParticipateInEvent,\n      style: {\n        marginTop: \"30px\",\n        marginBottom: \"10px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Count my team in!\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onChange: this.setAttendance,\n      name: \"radio\",\n      className: \"radio-group\",\n      style: {\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${this.props.event.id}-one`,\n      value: \"Going\",\n      name: `selector${this.props.event.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: `${this.props.event.id}-one`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"I'm Going!\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${this.props.event.id}-two`,\n      value: \"Maybe\",\n      name: `selector${this.props.event.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: `${this.props.event.id}-two`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Maybe\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${this.props.event.id}-three`,\n      value: \"Nope\",\n      name: `selector${this.props.event.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: `${this.props.event.id}-three`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Nope\")), this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id ? React.createElement(\"button\", {\n      onClick: this.handleUnparticipateInEvent,\n      style: {\n        marginTop: \"20px\",\n        marginBottom: \"10px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Sorry, my team can't make it\") : null) : null)) : null) // <div className=\"regular_event_card\">\n    // <h1 className=\"event_name\">{this.props.event.name}</h1>\n    // <p className=\"event_location\">{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n    // <img className=\"team_logo\" src={this.props.event.pic_path} alt=\"event_pic\" />\n    // <h2 className=\"event_desc\">{this.props.event.description}</h2>\n    //     <p className=\"event_location\">Players per team: {this.props.event.players_per_team}</p>\n    //     <p className=\"event_location\">Number of teams: {this.props.event.max_number_of_teams}</p>\n    //     <p className=\"team_locatevent_locationion\">{this.props.event.pretty_time}</p>\n    //     {this.props.myTeam !== undefined && this.props.myTeam !== null?\n    //         this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n    //             <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count my team in!</button>\n    //             :\n    //             this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) && this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n    //                 <Fragment>\n    //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n    //                         <input type=\"radio\" id=\"option-one\" value=\"Going\" name=\"selector\" />\n    //                         <label htmlFor=\"option-one\">I'm Going!</label>\n    //                         <input type=\"radio\" id=\"option-two\" value=\"Maybe\" name=\"selector\" />\n    //                         <label htmlFor=\"option-two\">Maybe</label>\n    //                         <input type=\"radio\" id=\"option-three\" value=\"Nope\" name=\"selector\" />\n    //                         <label htmlFor=\"option-three\">Nope</label>\n    //                     </div>\n    //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n    //                 </Fragment>\n    //                 :\n    //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n    //         :\n    //         this.state.added ?\n    //             this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n    //                 <Fragment>\n    //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n    //                         <input type=\"radio\" id=\"option-one\" name=\"selector\" />\n    //                         <label htmlFor=\"option-one\">I'm Going!</label>\n    //                         <input type=\"radio\" id=\"option-two\" name=\"selector\" />\n    //                         <label htmlFor=\"option-two\">Maybe</label>\n    //                         <input type=\"radio\" id=\"option-three\" name=\"selector\" />\n    //                         <label htmlFor=\"option-three\">Nope</label>\n    //                     </div>\n    //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n    //                 </Fragment>\n    //                 :\n    //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n    //             :\n    //             null\n    //     }\n    // </div>\n    ;\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.currentTeam,\n    myGroup: state.teamReducer.currentGroup,\n    myEvents: state.userReducer.myEvents // sportId: state.teamReducer.currentSportId\n\n  };\n}\n\nexport default connect(msp, {\n  addEvent,\n  addAvailableEvent,\n  setTeam\n})(EventCard);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js"],"names":["React","Fragment","Redirect","connect","addEvent","addAvailableEvent","setTeam","EventCard","Component","state","status","undefined","user_event","added","viewed","handleParticipateInEvent","fetch","method","headers","body","JSON","stringify","event_id","props","event","id","team_id","myTeam","then","res","json","attributes","events","teams","setState","handleUnparticipateInEvent","filter","setAttendance","e","user_id","currentUser","user","data","target","value","console","log","componentDidMount","status_check","find","users","forEach","resp","going","selector","document","querySelectorAll","checked","render","myGroup","dash_style","backgroundImage","pic_path","name","price","fontSize","players_per_team","max_number_of_teams","pretty_time","description","marginTop","marginBottom","admin","msp","userReducer","teamReducer","currentTeam","currentGroup","myEvents"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { addEvent, addAvailableEvent } from './redux/actions/user_actions'\nimport { setTeam } from './redux/actions/team_actions'\n\nclass EventCard extends React.Component{\n\n    state= {\n        status: undefined,\n        user_event: undefined,\n        added: false,\n        viewed: false\n    }\n\n    handleParticipateInEvent = () => {\n        fetch(\"http://localhost:3000/api/v1/team_events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                team_id: this.props.myTeam.id\n            })\n            })\n        .then(res => res.json())\n        .then(() =>{\n            this.props.setTeam(\n                {...this.props.myTeam,\n                    attributes: {\n                    ...this.props.myTeam.attributes,\n                    events: [...this.props.myTeam.attributes.events,this.props.event]\n                 }\n                }\n            )\n            this.props.addEvent(\n                {attributes:{\n                        ...this.props.event,\n                        teams: [...this.props.event.teams,this.props.myTeam.attributes]\n                    }\n                })\n            this.setState({\n                added: true\n            })\n        }\n        )\n    }\n\n    handleUnparticipateInEvent = () => {\n        fetch(\"http://localhost:3000/api/v1/delete_by_team_event_ids\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                team_id: this.props.myTeam.id\n            })\n            })\n        .then(res => res.json())\n        .then(() =>{\n            this.props.setTeam(\n                {...this.props.myTeam,\n                    attributes: {\n                    ...this.props.myTeam.attributes,\n                    events: this.props.myTeam.attributes.events.filter(event => event.id !== this.props.event.id)\n                 }\n                }\n            )\n            this.props.addAvailableEvent(\n                {attributes:{\n                    ...this.props.event,\n                    teams: [...this.props.event.teams,this.props.myTeam.attributes]\n                    }\n                })\n            this.setState({\n                added: true\n            })\n        }\n        )\n    }\n\n    setAttendance = e => {\n        fetch(`http://localhost:3000/api/v1/user_events/${this.state.user_event}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                user_id: this.props.currentUser.user.data.attributes.id,\n                status: e.target.value\n            })\n        })\n        .then(res => res.json())\n        .then(console.log)\n    }\n\n    componentDidMount(){\n        if(this.props.status_check === 1 && this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id)){\n            this.props.myTeam.attributes.users.forEach(user => {\n                fetch(\"http://localhost:3000/api/v1/status_check\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    event_id: this.props.event.id,\n                    user_id: user.id\n                })\n                })\n                .then(res => res.json())\n                .then(resp => {\n                    switch (resp.status) {\n                        case 'Going':\n                                this.going = {}\n                                this.going += user.id\n\n                            break;\n                        case 'Maybe':\n                                this.going = {}\n                                this.going += user.id\n                            break;\n                        case 'Nope':\n                                this.going = {}\n                                this.going += user.id\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .then(() => {\n                console.log(this.going[0])\n                }\n\n                )\n            }\n\n            )\n\n            fetch(\"http://localhost:3000/api/v1/status_check\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                user_id: this.props.currentUser.user.data.attributes.id\n            })\n            })\n            .then(res => res.json())\n            .then((resp) =>\n                this.setState({\n                    status: resp.status,\n                    user_event: resp.id\n                },()=>{\n                    const selector = document.querySelectorAll(`input[name=selector${this.props.event.id}]`)\n                    console.log(selector)\n                    switch (resp.status) {\n                        case 'Going':\n                            selector[0].checked = \"true\"\n                            break;\n                        case 'Maybe':\n                            selector[1].checked = \"true\"\n                            break;\n                        case 'Nope':\n                            selector[2].checked = \"true\"\n                            break;\n                        default:\n                            break;\n                    }\n                    selector.value = resp.status\n                    console.log(selector.value)\n                })\n            )\n        }else{\n            this.setState({\n                status: null\n            })\n        }\n    }\n\n    // handleViewEvent = () => {\n    //     // this.props.setevent(this.props.event)\n    //     this.setState({\n    //         viewed: true\n    //     })\n    // }\n\n    render(){\n        console.log(this.props, this.state)\n        if(this.state.added && this.props.myGroup)return <Redirect to=\"/dashboard\" />\n        // if(this.state.viewed){\n        //     this.setState({\n        //         viewed: false\n        //     })\n        //     return <Redirect to={`/event/${this.props.event.id}`} />\n        // }\n        // debugger\n        return (\n        <Fragment>\n            {\n                this.props.dash_style?\n                <div>\n                    <figure style={{backgroundImage: `url(${this.props.event.pic_path})`}}>\n                        <figcaption>\n                            <h4> <span>{this.props.event.name}</span></h4>\n                            <p>{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n                        </figcaption>\n                    </figure>\n                </div>\n                :\n                !this.state.added?\n                    <div className={this.props.myTeam !== undefined && this.props.myTeam !== null ? \"irregular_event_card\" : \"regular_card\"}>\n                        <div className=\"group_logo_div\">\n                            <img className=\"group_logo\" src={this.props.event.pic_path} alt=\"event_logo\" />\n                            <p className=\"group_location\" style={{fontSize: \"40px\"}}>{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n                            <p className=\"event_location\">Players per team: {this.props.event.players_per_team}</p>\n                            <p className=\"event_location\">Number of teams: {this.props.event.max_number_of_teams}</p>\n                            <p className=\"team_locatevent_locationion\">{this.props.event.pretty_time}</p>\n                        </div>\n                        <div className=\"group_info_div\">\n                            <h1 className=\"group_name\">{this.props.event.name}</h1>\n                            <h2 className=\"group_desc\">{this.props.event.description}</h2>\n                            {this.props.myTeam !== undefined && this.props.myTeam !== null?\n                                this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n                                    <button onClick={this.handleParticipateInEvent} style={{marginTop: \"30px\", marginBottom: \"10px\"}} className='dash_button'>Count my team in!</button>\n                                    :\n                                    <Fragment>\n                                        <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\" style={{marginBottom: \"10px\"}}>\n                                            <input type=\"radio\" id={`${this.props.event.id}-one`} value=\"Going\" name={`selector${this.props.event.id}`}/>\n                                            <label htmlFor={`${this.props.event.id}-one`}>I'm Going!</label>\n                                            <input type=\"radio\" id={`${this.props.event.id}-two`} value=\"Maybe\" name={`selector${this.props.event.id}`}/>\n                                            <label htmlFor={`${this.props.event.id}-two`}>Maybe</label>\n                                            <input type=\"radio\" id={`${this.props.event.id}-three`} value=\"Nope\" name={`selector${this.props.event.id}`}/>\n                                            <label htmlFor={`${this.props.event.id}-three`}>Nope</label>\n                                        </div>\n                                        {\n                                        this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n                                            <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"20px\", marginBottom: \"10px\"}} className='dash_button'>Sorry, my team can't make it</button>\n                                            :\n                                            null\n                                        }\n                                    </Fragment>\n                                :\n                                null\n\n                            }\n                        </div>\n                    </div>\n                    :\n                    null\n            }\n        </Fragment>\n        // <div className=\"regular_event_card\">\n            // <h1 className=\"event_name\">{this.props.event.name}</h1>\n            // <p className=\"event_location\">{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n            // <img className=\"team_logo\" src={this.props.event.pic_path} alt=\"event_pic\" />\n            // <h2 className=\"event_desc\">{this.props.event.description}</h2>\n        //     <p className=\"event_location\">Players per team: {this.props.event.players_per_team}</p>\n        //     <p className=\"event_location\">Number of teams: {this.props.event.max_number_of_teams}</p>\n        //     <p className=\"team_locatevent_locationion\">{this.props.event.pretty_time}</p>\n        //     {this.props.myTeam !== undefined && this.props.myTeam !== null?\n        //         this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n        //             <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count my team in!</button>\n        //             :\n        //             this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) && this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n        //                 <Fragment>\n        //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n        //                         <input type=\"radio\" id=\"option-one\" value=\"Going\" name=\"selector\" />\n        //                         <label htmlFor=\"option-one\">I'm Going!</label>\n        //                         <input type=\"radio\" id=\"option-two\" value=\"Maybe\" name=\"selector\" />\n        //                         <label htmlFor=\"option-two\">Maybe</label>\n        //                         <input type=\"radio\" id=\"option-three\" value=\"Nope\" name=\"selector\" />\n        //                         <label htmlFor=\"option-three\">Nope</label>\n        //                     </div>\n        //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n        //                 </Fragment>\n        //                 :\n        //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n        //         :\n        //         this.state.added ?\n        //             this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n        //                 <Fragment>\n        //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n        //                         <input type=\"radio\" id=\"option-one\" name=\"selector\" />\n        //                         <label htmlFor=\"option-one\">I'm Going!</label>\n        //                         <input type=\"radio\" id=\"option-two\" name=\"selector\" />\n        //                         <label htmlFor=\"option-two\">Maybe</label>\n        //                         <input type=\"radio\" id=\"option-three\" name=\"selector\" />\n        //                         <label htmlFor=\"option-three\">Nope</label>\n        //                     </div>\n        //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n        //                 </Fragment>\n        //                 :\n        //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n        //             :\n        //             null\n\n        //     }\n        // </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.currentTeam,\n        myGroup: state.teamReducer.currentGroup,\n        myEvents: state.userReducer.myEvents,\n        // sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { addEvent, addAvailableEvent, setTeam })(EventCard)"]},"metadata":{},"sourceType":"module"}