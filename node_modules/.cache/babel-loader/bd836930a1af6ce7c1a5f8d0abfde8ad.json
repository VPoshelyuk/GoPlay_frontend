{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamCard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\n\nclass TeamSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      joined: false\n    };\n\n    this.joinTeam = () => {\n      fetch(\"http://localhost:3000/api/v1/user_teams\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.user.data.id,\n          team_id: this.props.team.id,\n          signup_won_games: this.props.team.won_games,\n          signup_tie_games: this.props.team.tie_games,\n          signup_lost_games: this.props.team.lost_games\n        })\n      }).then(setTimeout(() => {\n        fetch(\"http://localhost:3000/api/v1/auto_login\", {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => res.json()).then(user => {\n          if (user.errors) {\n            alert(user.errors);\n          } else {\n            this.props.setUser(user);\n            localStorage.token = user.token;\n            this.setState({\n              joined: true\n            });\n          }\n        });\n      }, 1000));\n    };\n  }\n\n  render() {\n    if (this.state.joined) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      onClick: this.joinTeam,\n      className: \"team_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"team_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.team.name), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.team.location), React.createElement(\"p\", {\n      className: \"team_mem_num\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.team.number_of_members), React.createElement(\"img\", {\n      className: \"team_logo\",\n      src: this.props.team.logo_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"team_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.team.description), React.createElement(\"div\", {\n      className: \"team_scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.team.won_games), React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.team.tie_games), React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.team.lost_games)));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(TeamSearch);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamCard.js"],"names":["React","Fragment","Redirect","connect","setUser","TeamSearch","Component","state","joined","joinTeam","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","user","data","id","team_id","team","signup_won_games","won_games","signup_tie_games","tie_games","signup_lost_games","lost_games","then","setTimeout","localStorage","token","res","json","errors","alert","setState","render","name","location","number_of_members","logo_path","description","msp","userReducer","sportId","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\n\nclass TeamSearch extends React.Component{\n    state = {\n        joined: false\n    }\n\n    joinTeam = () => {\n        fetch(\"http://localhost:3000/api/v1/user_teams\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.user.data.id,\n                team_id: this.props.team.id,\n                signup_won_games: this.props.team.won_games,\n                signup_tie_games: this.props.team.tie_games,\n                signup_lost_games: this.props.team.lost_games\n            })\n        })\n        .then(\n            setTimeout(() => {\n                fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                    headers: {\n                    \"authorization\": localStorage.token\n                    }\n                })\n                .then(res => res.json())\n                .then(user =>{\n                    if (user.errors){\n                    alert(user.errors)\n                    } else {\n                    this.props.setUser(user)\n                    localStorage.token = user.token\n                    this.setState({\n                        joined: true\n                    })\n                    }\n                })\n            }, 1000)\n        )\n    }\n\n    render(){\n        if(this.state.joined) return <Redirect to=\"/dashboard\" />\n        return (\n        <div onClick={this.joinTeam} className=\"team_card\">\n            <h1 className=\"team_name\">{this.props.team.name}</h1>\n            <p className=\"team_location\">{this.props.team.location}</p>\n            <p className=\"team_mem_num\">{this.props.team.number_of_members}</p>\n            <img className=\"team_logo\" src={this.props.team.logo_path} />\n            <h2 className=\"team_desc\">{this.props.team.description}</h2>\n            <div className=\"team_scores\">\n                <p className=\"team_score\">{this.props.team.won_games}</p>\n                <p className=\"team_score\">{this.props.team.tie_games}</p>\n                <p className=\"team_score\">{this.props.team.lost_games}</p>\n            </div>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { setUser })(TeamSearch)"]},"metadata":{},"sourceType":"module"}