{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/Dashboard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { changeSportId } from './redux/actions/team_actions';\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createATeam: false,\n      searchForATeam: false,\n      my_team: undefined\n    };\n\n    this.handleCreateTeam = () => {\n      this.setState({\n        createATeam: true\n      });\n    };\n\n    this.handleChange = e => {\n      this.props.changeSportId(parseInt(e.target.value));\n\n      if (this.props.currentUser.user.data.attributes.teams.length !== 0) {\n        this.setState({\n          my_team: this.props.currentUser.user.data.attributes.teams.find(team => team.activity_id === this.props.sportId)\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeSportId(this.props.currentUser.user.data.attributes.activities[0].id);\n\n    if (this.props.currentUser.user.data.attributes.teams.length !== 0) {\n      this.setState({\n        my_team: this.props.currentUser.user.data.attributes.teams.find(team => team.activity_id === this.props.sportId)\n      });\n    }\n  }\n\n  render() {\n    if (this.state.createATeam) {\n      this.setState({\n        createATeam: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/create_team\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onChange: this.handleChange,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"field half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select\",\n      defaultValue: \"\",\n      name: \"location\",\n      id: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Choose Sport:\"), this.props.currentUser.user.data.attributes.activities.map(sport => React.createElement(\"option\", {\n      key: sport.id,\n      value: sport.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, sport.name))))), this.state.my_team !== undefined && this.state.my_team.activity_id === this.props.sportId ? React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"yo\")) : React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"You are not currently\"), React.createElement(\"h3\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"a member of any team\"), React.createElement(\"h3\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"but we got you, you can:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCreateTeam,\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Create a team\"), React.createElement(\"button\", {\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Search for a team to join\")));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  changeSportId\n})(Dashboard);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/Dashboard.js"],"names":["React","Fragment","Redirect","connect","changeSportId","Dashboard","Component","state","createATeam","searchForATeam","my_team","undefined","handleCreateTeam","setState","handleChange","e","props","parseInt","target","value","currentUser","user","data","attributes","teams","length","find","team","activity_id","sportId","componentDidMount","activities","id","render","map","sport","name","msp","userReducer","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { changeSportId } from './redux/actions/team_actions'\n\nclass Dashboard extends React.Component{\n    state = {\n        createATeam: false,\n        searchForATeam: false,\n        my_team: undefined\n    }\n\n    handleCreateTeam = () => {\n        this.setState({\n            createATeam: true\n        })\n    }\n\n    handleChange = (e) => {\n        this.props.changeSportId(parseInt(e.target.value))\n        if(this.props.currentUser.user.data.attributes.teams.length !== 0){\n            this.setState({\n                my_team: this.props.currentUser.user.data.attributes.teams.find(team => team.activity_id === this.props.sportId)\n            })\n        }\n    }\n\n    componentDidMount(){\n        this.props.changeSportId(this.props.currentUser.user.data.attributes.activities[0].id)\n        if(this.props.currentUser.user.data.attributes.teams.length !== 0){\n            this.setState({\n                my_team: this.props.currentUser.user.data.attributes.teams.find(team => team.activity_id === this.props.sportId)\n            })\n        }\n    }\n\n    render(){\n        if(this.state.createATeam){\n            this.setState({\n                createATeam: false\n            })\n            return <Redirect to=\"/create_team\" />\n        }\n        return (\n            <Fragment>\n                <form onChange={this.handleChange} className='form'>\n                <p className='field half'></p>\n                <p className='field half'>\n                    <select className='select' defaultValue='' name=\"location\" id='select'>\n                    <option value='' disabled>Choose Sport:</option>\n                    {this.props.currentUser.user.data.attributes.activities.map(sport => <option key={sport.id} value={sport.id}>{sport.name}</option>)}\n                    </select>\n                </p> \n                </form>\n                {this.state.my_team !== undefined && this.state.my_team.activity_id === this.props.sportId ?\n                <div className=\"main\">  \n                    <h1 className=\"main_text\">yo</h1>\n                </div>\n                :\n                <div className=\"dash_main\">  \n                    <h3 className=\"main_text\">You are not currently</h3>\n                    <h3 className=\"main_text\">a member of any team</h3>\n                    <h3 className=\"main_text\">but we got you, you can:</h3><br/><br/>\n                    <button onClick={this.handleCreateTeam} className='dash_button'>Create a team</button>\n                    <button className='dash_button'>Search for a team to join</button>\n                </div>\n                }\n            </Fragment>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { changeSportId })(Dashboard)"]},"metadata":{},"sourceType":"module"}