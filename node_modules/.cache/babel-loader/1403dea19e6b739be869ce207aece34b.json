{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamSignUp.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass TeamSignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      logo_path: \"\",\n      description: \"\",\n      won_games: 0,\n      tie_games: 0,\n      lost_games: 0\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(e.target);\n\n      if (this.state.password === this.state.passwordConfirmation) {\n        fetch(\"http://localhost:3000/api/v1/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify(this.state)\n        }).then(res => res.json()).then(response => {\n          if (response.errors) {\n            alert(response.errors);\n          } else {\n            this.props.setUser(response);\n            localStorage.token = response.token;\n            fetch(\"http://localhost:3000/api/v1/user_activities\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user_id: response.user.data.attributes.id,\n                sports: this.state.activity_ids\n              })\n            }).then(res => res.json()).then(console.log);\n            this.setState({\n              first_name: \"\",\n              last_name: \"\",\n              username: \"\",\n              location: \"\",\n              email: \"\",\n              phone_number: \"\",\n              birthday: \"\",\n              gender: \"\",\n              bio: \"\",\n              admin: 0,\n              team_id: null,\n              activity_ids: [],\n              password: \"\",\n              passwordConfirmation: \"\"\n            });\n          }\n        });\n      } else {\n        alert(\"Passwords don't match!\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n\n    if (this.props.email !== \"\" && this.props.password !== \"\") {\n      this.setState({\n        email: this.props.email,\n        password: this.props.password,\n        passwordConfirmation: this.props.password\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"logo_path\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"logo_path\",\n      name: \"logo_path\",\n      value: this.state.logo_path,\n      onChange: this.handleChange,\n      required: true,\n      type: \"logo_path\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      cols: \"50\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp)(TeamSignUp);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamSignUp.js"],"names":["React","Fragment","Redirect","connect","TeamSignUp","Component","state","name","logo_path","description","won_games","tie_games","lost_games","handleChange","event","setState","target","value","handleSubmit","e","preventDefault","console","log","password","passwordConfirmation","fetch","method","headers","body","JSON","stringify","then","res","json","response","errors","alert","props","setUser","localStorage","token","user_id","user","data","attributes","id","sports","activity_ids","first_name","last_name","username","location","email","phone_number","birthday","gender","bio","admin","team_id","componentDidMount","render","msp","currentUser","userReducer","sportId","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass TeamSignUp extends React.Component{\n    state = {\n        name: \"\",\n        logo_path: \"\",\n        description: \"\",\n        won_games: 0,\n        tie_games: 0,\n        lost_games: 0\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(e.target)\n        if (this.state.password === this.state.passwordConfirmation){\n            fetch(\"http://localhost:3000/api/v1/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n            })\n            .then(res => res.json())\n            .then(response => {\n            if(response.errors){\n                alert(response.errors)\n            } else {\n                this.props.setUser(response)\n                localStorage.token = response.token\n\n                fetch(\"http://localhost:3000/api/v1/user_activities\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Accept\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        user_id: response.user.data.attributes.id,\n                        sports: this.state.activity_ids\n                    })\n                })\n                .then(res => res.json())\n                .then(console.log)\n\n                this.setState({\n                    first_name: \"\",\n                    last_name: \"\",\n                    username: \"\",\n                    location: \"\",\n                    email: \"\",\n                    phone_number: \"\",\n                    birthday: \"\",\n                    gender: \"\",\n                    bio: \"\",\n                    admin: 0,\n                    team_id: null,\n                    activity_ids: [],\n                    password: \"\",\n                    passwordConfirmation: \"\"\n                })\n            }\n            })\n        } else {\n            alert(\"Passwords don't match!\")\n        }\n\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n        if(this.props.email !== \"\" && this.props.password !== \"\"){\n            this.setState({\n                email: this.props.email,\n                password: this.props.password,\n                passwordConfirmation: this.props.password\n            })\n        }\n    }\n      \n    \n\n    render(){\n        return (\n        <div className=\"signup-main\">\n            <form onSubmit={this.handleSubmit} className='form'>\n            <p className='field required half'>\n                <label className='label required' htmlFor='name'>Name</label>\n                <input className='text-input' id='name' name='name' value={this.state.name} onChange={this.handleChange} required type='text'/>\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='logo_path'>Logo</label>\n                <input className='text-input' id='logo_path' name='logo_path' value={this.state.logo_path} onChange={this.handleChange} required type='logo_path' />\n            </p>\n            <p className='field'>\n                <label className='label' htmlFor='description'>Description</label>\n                <textarea className='textarea' cols='50' id='description' name='description' value={this.state.description} onChange={this.handleChange} rows='4'></textarea>\n            </p>\n            <p className='field'>\n                <input className='button' type='submit' value='Sign Up' />\n            </p>\n            </form>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(TeamSignUp)"]},"metadata":{},"sourceType":"module"}