{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/Dashboard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { changeSportId, setTeam, setGroup } from './redux/actions/team_actions';\nimport { setMyTeams, setAvailableEvents, setMyEvents } from './redux/actions/user_actions';\nimport GroupCard from './GroupCard';\nimport EventCard from './EventCard';\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createATeam: false,\n      searchForATeam: false,\n      joinGroup: false,\n      loaded: false\n    };\n\n    this.handleCreateTeam = () => {\n      this.setState({\n        createATeam: true\n      });\n    };\n\n    this.handleSearchTeam = () => {\n      this.setState({\n        searchForATeam: true\n      });\n    };\n\n    this.handleChange = e => {\n      this.props.changeSportId(parseInt(e.target.value));\n    };\n\n    this.handleJoinGroup = () => {\n      this.setState({\n        joinGroup: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(Date.now());\n    console.log(this.props);\n    this.props.setGroup(undefined);\n    fetch(\"http://localhost:3000/api/v1/my_teams\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: this.props.currentUser.user.data.attributes.id\n      })\n    }).then(res => res.json()) //   .catch(() => this.props.setMyTeams(undefined))\n    .then(teams => {\n      this.props.setMyTeams(teams.teams.data);\n      this.props.setTeam(this.props.myTeams ? this.props.myTeams.find(team => team.attributes.activity_id === this.props.sportId) : undefined);\n      console.log(this.props);\n      setTimeout(() => {\n        if (this.props.myTeam !== undefined && this.props.myTeam !== null) {\n          let group_ids = [];\n          group_ids += this.props.myTeam.attributes.groups.map(group => group.id);\n          console.log(group_ids, \"bitch\");\n          const fD = new FormData();\n          fD.append(\"groups_id\", group_ids);\n          fD.append(\"user_id\", this.props.currentUser.user.data.attributes.id);\n          fetch(\"http://localhost:3000/api/v1/my_events\", {\n            method: \"POST\",\n            body: fD\n          }).then(res => res.json()).then(events => {\n            this.props.setMyEvents(events.events.data);\n            fetch(\"http://localhost:3000/api/v1/available_events\", {\n              method: \"POST\",\n              body: fD\n            }).then(res => res.json()).then(events => {\n              this.props.setAvailableEvents(events.events.data);\n              this.setState({\n                loaded: true\n              });\n            });\n          });\n        } else {\n          this.setState({\n            loaded: true\n          });\n        }\n      }, 1);\n    });\n    this.props.changeSportId(this.props.currentUser.user.data.attributes.activities[0].id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.myTeams !== undefined && this.props.sportId !== prevProps.sportId && prevProps.sportId !== 0) {\n      this.setState({\n        loaded: false\n      });\n      this.props.setTeam(this.props.myTeams ? this.props.myTeams.find(team => team.attributes.activity_id === this.props.sportId) : undefined);\n      console.log(this.props);\n      setTimeout(() => {\n        if (this.props.myTeam !== undefined && this.props.myTeam !== null) {\n          let group_ids = [];\n          group_ids += this.props.myTeam.attributes.groups.map(group => group.id);\n          const fD = new FormData();\n          fD.append(\"groups_id\", group_ids);\n          fD.append(\"user_id\", this.props.currentUser.user.data.attributes.id);\n          fetch(\"http://localhost:3000/api/v1/my_events\", {\n            method: \"POST\",\n            body: fD\n          }).then(res => res.json()).then(events => {\n            this.props.setMyEvents(events.events.data);\n            fetch(\"http://localhost:3000/api/v1/available_events\", {\n              method: \"POST\",\n              body: fD\n            }).then(res => res.json()).then(events => {\n              this.props.setAvailableEvents(events.events.data);\n              this.setState({\n                loaded: true\n              });\n            });\n          });\n        } else {\n          this.setState({\n            loaded: true\n          });\n        }\n      }, 1);\n    }\n  } //componentDidUpdate instead of my_team\n\n\n  render() {\n    console.log(this.props, this.state);\n\n    if (this.state.createATeam) {\n      this.setState({\n        createATeam: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/create_team\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.searchForATeam) {\n      this.setState({\n        searchForATeam: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/search_team\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.joinGroup) {\n      this.setState({\n        joinGroup: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/add_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      });\n    } // if(this.props.currentUser.user.data.attributes.teams.length !== 0){\n    //     my_team = this.props.currentUser.user.data.attributes.teams.find(team => team.activity_id === this.props.sportId)\n    // }\n\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onChange: this.handleChange,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field\",\n      style: {\n        right: \"0\",\n        marginTop: \"-20px\",\n        marginBottom: \"10px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select\",\n      style: {\n        textAlignLast: \"center\"\n      },\n      defaultValue: this.props.currentUser.user.data.attributes.activities.sort((a, b) => a.id - b.id)[0].id,\n      name: \"location\",\n      id: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Choose Sport:\"), this.props.currentUser.user.data.attributes.activities.sort((a, b) => a.id - b.id).map(sport => React.createElement(\"option\", {\n      key: sport.id,\n      value: sport.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, sport.name))))), React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.props.myTeam !== undefined && this.props.myTeam !== null ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"team_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.props.myTeam.attributes.name), React.createElement(\"h2\", {\n      className: \"team_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.props.myTeam.attributes.description), React.createElement(\"div\", {\n      className: \"logos_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"team_logo\",\n      src: this.props.myTeam.attributes.logo,\n      alt: \"sport_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.props.myTeam.attributes.location), React.createElement(\"img\", {\n      className: \"activity_logo\",\n      src: this.props.currentUser.user.data.attributes.activities.find(act => act.id === this.props.sportId).logo_path,\n      alt: \"sport_logo_path\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"team_mem_num\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Number of members: \", this.props.myTeam.attributes.number_of_members), React.createElement(\"div\", {\n      className: \"team_scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.props.myTeam.attributes.won_games), React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.props.myTeam.attributes.tie_games), React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.props.myTeam.attributes.lost_games)), this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id ? React.createElement(\"button\", {\n      onClick: this.handleJoinGroup,\n      style: {\n        marginTop: \"200px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Join Group\") : null, this.props.currentUser.user.data.attributes.events.map(event => React.createElement(EventCard, {\n      key: event.id,\n      event: event,\n      status_check: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Your events sucker:\"), this.props.availableEvents.map(event => React.createElement(EventCard, {\n      key: event.attributes.id,\n      event: event.attributes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Your groups sucker:\"), this.props.myTeam.attributes.groups.map(group => React.createElement(GroupCard, {\n      key: group.id,\n      group: group,\n      add: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lds-spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"You are not currently\"), React.createElement(\"h3\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"a member of any team\"), React.createElement(\"h3\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"but we got you, you can:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCreateTeam,\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Create a team\"), React.createElement(\"button\", {\n      onClick: this.handleSearchTeam,\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Search for a team to join\"))));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId,\n    availableEvents: state.userReducer.availableEvents,\n    myEvents: state.userReducer.myEvents,\n    myTeam: state.teamReducer.currentTeam,\n    // myGroups: state.teamReducer.currentGroups,\n    myTeams: state.userReducer.myTeams\n  };\n}\n\nexport default connect(msp, {\n  changeSportId,\n  setTeam,\n  setMyTeams,\n  setGroup,\n  setAvailableEvents,\n  setMyEvents\n})(Dashboard);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/Dashboard.js"],"names":["React","Fragment","Redirect","connect","changeSportId","setTeam","setGroup","setMyTeams","setAvailableEvents","setMyEvents","GroupCard","EventCard","Dashboard","Component","state","createATeam","searchForATeam","joinGroup","loaded","handleCreateTeam","setState","handleSearchTeam","handleChange","e","props","parseInt","target","value","handleJoinGroup","componentDidMount","console","log","Date","now","undefined","fetch","method","headers","body","JSON","stringify","user_id","currentUser","user","data","attributes","id","then","res","json","teams","myTeams","find","team","activity_id","sportId","setTimeout","myTeam","group_ids","groups","map","group","fD","FormData","append","events","activities","componentDidUpdate","prevProps","render","right","marginTop","marginBottom","width","textAlignLast","sort","a","b","sport","name","description","logo","location","act","logo_path","number_of_members","won_games","tie_games","lost_games","admin","event","availableEvents","msp","userReducer","teamReducer","currentSportId","myEvents","currentTeam"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { changeSportId, setTeam, setGroup } from './redux/actions/team_actions'\nimport { setMyTeams, setAvailableEvents, setMyEvents } from './redux/actions/user_actions'\nimport GroupCard from './GroupCard';\nimport EventCard from './EventCard';\n\nclass Dashboard extends React.Component{\n    state = {\n        createATeam: false,\n        searchForATeam: false,\n        joinGroup: false,\n        loaded: false\n    }\n\n    handleCreateTeam = () => {\n        this.setState({\n            createATeam: true\n        })\n    }\n\n    handleSearchTeam = () => {\n        this.setState({\n            searchForATeam: true\n        })\n    }\n\n    handleChange = (e) => {\n        this.props.changeSportId(parseInt(e.target.value))\n    }\n\n    handleJoinGroup = () => {\n        this.setState({\n            joinGroup: true\n        })\n    }\n\n    componentDidMount(){\n        console.log(Date.now())\n        console.log(this.props)\n        this.props.setGroup(undefined)\n        fetch(\"http://localhost:3000/api/v1/my_teams\", {\n              method: \"POST\",\n              headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Accept\": \"application/json\"\n              },\n              body: JSON.stringify({\n                  user_id: this.props.currentUser.user.data.attributes.id\n              })\n          })\n          .then(res => res.json())\n        //   .catch(() => this.props.setMyTeams(undefined))\n          .then(teams => {\n              this.props.setMyTeams(teams.teams.data)\n              this.props.setTeam(this.props.myTeams? this.props.myTeams.find(team => team.attributes.activity_id === this.props.sportId):undefined)\n                console.log(this.props)\n                setTimeout(() => {\n                    if (this.props.myTeam !== undefined && this.props.myTeam !== null) {\n                        let group_ids = []\n                        group_ids += this.props.myTeam.attributes.groups.map(group => group.id)\n                        console.log(group_ids, \"bitch\")\n                        const fD = new FormData()\n                        fD.append(\"groups_id\", group_ids)\n                        fD.append(\"user_id\", this.props.currentUser.user.data.attributes.id)\n                        fetch(\"http://localhost:3000/api/v1/my_events\", {\n                        method: \"POST\",\n                        body: fD\n                        })\n                        .then(res => res.json())\n                        .then(events => {\n                            this.props.setMyEvents(events.events.data)\n                            fetch(\"http://localhost:3000/api/v1/available_events\", {\n                            method: \"POST\",\n                            body: fD\n                            })\n                            .then(res => res.json())\n                            .then(events => {\n                                this.props.setAvailableEvents(events.events.data)\n                                this.setState({\n                                    loaded: true\n                                })\n                            })\n                        })\n                    } else {\n                        this.setState({\n                            loaded: true\n                        })\n                    }\n                }, 1);\n          })\n        this.props.changeSportId(this.props.currentUser.user.data.attributes.activities[0].id)\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.myTeams !== undefined && this.props.sportId !== prevProps.sportId && prevProps.sportId !== 0){\n            this.setState({\n                loaded: false\n            })\n            this.props.setTeam(this.props.myTeams? this.props.myTeams.find(team => team.attributes.activity_id === this.props.sportId):undefined)\n            console.log(this.props)\n            setTimeout(() => {\n                if (this.props.myTeam !== undefined && this.props.myTeam !== null) {\n                    let group_ids = []\n                    group_ids += this.props.myTeam.attributes.groups.map(group => group.id)\n                    const fD = new FormData()\n                    fD.append(\"groups_id\", group_ids)\n                    fD.append(\"user_id\", this.props.currentUser.user.data.attributes.id)\n                    fetch(\"http://localhost:3000/api/v1/my_events\", {\n                        method: \"POST\",\n                        body: fD\n                    })\n                    .then(res => res.json())\n                    .then(events => {\n                        this.props.setMyEvents(events.events.data)\n                        fetch(\"http://localhost:3000/api/v1/available_events\", {\n                        method: \"POST\",\n                        body: fD\n                        })\n                        .then(res => res.json())\n                        .then(events => {\n                            this.props.setAvailableEvents(events.events.data)\n                            this.setState({\n                                loaded: true\n                            })\n                        })\n                    })\n                } else {\n                    this.setState({\n                        loaded: true\n                    })\n                }\n            }, 1);\n        }\n    }\n\n    //componentDidUpdate instead of my_team\n\n    render(){\n        console.log(this.props, this.state)\n        if(this.state.createATeam){\n            this.setState({\n                createATeam: false\n            })\n            return <Redirect to=\"/create_team\" />\n        }\n        if(this.state.searchForATeam){\n            this.setState({\n                searchForATeam: false\n            })\n            return <Redirect to=\"/search_team\" />\n        }\n        if(this.state.joinGroup){\n            this.setState({\n                joinGroup: false\n            })\n            return <Redirect to=\"/add_group\" />\n        }\n        // if(this.props.currentUser.user.data.attributes.teams.length !== 0){\n        //     my_team = this.props.currentUser.user.data.attributes.teams.find(team => team.activity_id === this.props.sportId)\n        // }\n\n        return (\n            <Fragment>\n                <form onChange={this.handleChange} className='form'>\n\n                <p className='field' style={{right: \"0\" ,marginTop: \"-20px\", marginBottom: \"10px\", width: \"100%\"}}>\n                    <select className='select' style={{textAlignLast: \"center\"}} defaultValue={this.props.currentUser.user.data.attributes.activities.sort((a, b) => a.id - b.id)[0].id} name=\"location\" id='select'>\n                    <option value='' disabled>Choose Sport:</option>\n                    {this.props.currentUser.user.data.attributes.activities.sort((a, b) => a.id - b.id).map(sport => <option key={sport.id} value={sport.id}>{sport.name}</option>)}\n                    </select>\n                </p> \n                </form>\n                <Fragment>\n                    {\n                        this.props.myTeam !== undefined && this.props.myTeam !== null?\n                        <Fragment>\n                            {this.state.loaded ?\n                            <div className=\"dash_main\">  \n                                <h1 className=\"team_name\">{this.props.myTeam.attributes.name}</h1>\n                                <h2 className=\"team_desc\">{this.props.myTeam.attributes.description}</h2>\n                                <div className=\"logos_div\">\n                                    <img className=\"team_logo\" src={this.props.myTeam.attributes.logo} alt=\"sport_logo\" />\n                                    <p className=\"team_location\">{this.props.myTeam.attributes.location}</p>\n                                    <img className=\"activity_logo\" src={this.props.currentUser.user.data.attributes.activities.find(act => act.id === this.props.sportId).logo_path} alt=\"sport_logo_path\" />\n                                </div>\n                                <p className=\"team_mem_num\">Number of members: {this.props.myTeam.attributes.number_of_members}</p>\n                                <div className=\"team_scores\">\n                                    <p className=\"team_score\">{this.props.myTeam.attributes.won_games}</p>\n                                    <p className=\"team_score\">{this.props.myTeam.attributes.tie_games}</p>\n                                    <p className=\"team_score\">{this.props.myTeam.attributes.lost_games}</p>\n                                </div>\n                                {this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id ?\n                                <button onClick={this.handleJoinGroup} style={{marginTop: \"200px\"}} className='dash_button'>Join Group</button>\n                                :\n                                null\n                                }\n                                {this.props.currentUser.user.data.attributes.events.map(event => <EventCard key={event.id} event={event} status_check={1} />)}\n                                <h1>Your events sucker:</h1>\n                                {this.props.availableEvents.map(event => <EventCard key={event.attributes.id} event={event.attributes} />)}\n                                <h1>Your groups sucker:</h1>\n                                {this.props.myTeam.attributes.groups.map(group => <GroupCard key={group.id} group={group} add={0} />)}\n                            </div>\n                            :\n                            <div className=\"loading\">\n                                <div className=\"lds-spinner\"><div></div><div></div><div></div>\n                                <div></div><div></div><div></div><div></div><div></div>\n                                <div></div><div></div><div></div><div></div></div>\n                            </div>\n                            }\n                        </Fragment>\n                        :\n                        <div className=\"dash_main\">  \n                            <h3 className=\"main_text\">You are not currently</h3>\n                            <h3 className=\"main_text\">a member of any team</h3>\n                            <h3 className=\"main_text\">but we got you, you can:</h3><br/><br/>\n                            <button onClick={this.handleCreateTeam} className='dash_button'>Create a team</button>\n                            <button onClick={this.handleSearchTeam} className='dash_button'>Search for a team to join</button>\n                        </div>\n                    }\n                </Fragment>\n            </Fragment>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId,\n        availableEvents: state.userReducer.availableEvents,\n        myEvents: state.userReducer.myEvents,\n        myTeam: state.teamReducer.currentTeam,\n        // myGroups: state.teamReducer.currentGroups,\n        myTeams: state.userReducer.myTeams\n    }\n}\n\nexport default connect(msp, { changeSportId, setTeam, setMyTeams, setGroup, setAvailableEvents, setMyEvents })(Dashboard)"]},"metadata":{},"sourceType":"module"}