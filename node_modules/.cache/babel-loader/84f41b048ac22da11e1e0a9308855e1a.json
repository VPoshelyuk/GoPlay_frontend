{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\nimport TeamCard from './TeamCard';\n\nclass GroupsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      teamsAvailable: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/vacant_teams\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sport_id: this.props.sportId\n      })\n    }).then(res => res.json()).then(teams => {\n      console.log(teams);\n      this.setState({\n        teamsAvailable: teams.teams.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.teamsAvailable.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onChange: this.handleChange,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field\",\n      style: {\n        right: \"0\",\n        marginTop: \"-20px\",\n        marginBottom: \"10px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select\",\n      style: {\n        textAlignLast: \"center\"\n      },\n      defaultValue: this.props.currentUser.user.data.attributes.activities[0].id,\n      name: \"location\",\n      id: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Choose Sport:\"), this.props.currentUser.user.data.attributes.activities.map(sport => React.createElement(\"option\", {\n      key: sport.id,\n      value: sport.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, sport.name))))), this.state.teamsAvailable.map(team => React.createElement(TeamCard, {\n      key: team.id,\n      team: team.attributes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sorry, there are no teams created for this type of sport yet.\"), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"It's a great opportunity to be the first: \"), React.createElement(NavLink, {\n      to: \"/dashboard\",\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Go back to dashboard...\")));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(GroupsContainer);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js"],"names":["React","Fragment","Redirect","NavLink","connect","setUser","TeamCard","GroupsContainer","Component","state","teamsAvailable","componentDidMount","fetch","method","headers","body","JSON","stringify","sport_id","props","sportId","then","res","json","teams","console","log","setState","data","render","length","handleChange","right","marginTop","marginBottom","width","textAlignLast","currentUser","user","attributes","activities","id","map","sport","name","team","msp","userReducer","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\nimport TeamCard from './TeamCard';\n\nclass GroupsContainer extends React.Component{\n    state= {\n        teamsAvailable: []\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/api/v1/vacant_teams\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                sport_id: this.props.sportId\n            })\n        })\n        .then(res => res.json())\n        .then(teams => {\n            console.log(teams)\n            this.setState({teamsAvailable: teams.teams.data})\n        })\n    }\n\n    render(){\n        return (\n        <div className=\"search-main\">\n            {this.state.teamsAvailable.length !== 0 ?\n            <Fragment>\n                <form onChange={this.handleChange} className='form'>\n                <p className='field' style={{right: \"0\" ,marginTop: \"-20px\", marginBottom: \"10px\", width: \"100%\"}}>\n                    <select className='select' style={{textAlignLast: \"center\"}} defaultValue={this.props.currentUser.user.data.attributes.activities[0].id} name=\"location\" id='select'>\n                    <option value='' disabled>Choose Sport:</option>\n                    {this.props.currentUser.user.data.attributes.activities.map(sport => <option key={sport.id} value={sport.id}>{sport.name}</option>)}\n                    </select>\n                </p> \n                </form>\n                {this.state.teamsAvailable.map(team => <TeamCard key={team.id} team={team.attributes}/>)}\n            </Fragment>\n            :\n            <div className=\"dash_main\">\n                <h1 className=\"main_text\" >Sorry, there are no teams created for this type of sport yet.</h1>\n                <h1 className=\"main_text\" >It's a great opportunity to be the first: </h1>\n                <NavLink to=\"/dashboard\" className=\"main_text\">Go back to dashboard...</NavLink>\n            </div>\n            }\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { setUser })(GroupsContainer)"]},"metadata":{},"sourceType":"module"}