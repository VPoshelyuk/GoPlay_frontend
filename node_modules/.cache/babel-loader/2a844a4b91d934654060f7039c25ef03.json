{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GroupCard from './GroupCard';\n\nclass GroupsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      groupsAvailable: [],\n      created: false\n    };\n\n    this.createGroup = () => {\n      this.setState({\n        created: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/groups\").then(res => res.json()).then(groups => {\n      if (this.props.add === 0) {\n        this.setState({\n          groupsAvailable: groups.groups.data\n        });\n      } else {\n        console.log(this.props, groups.groups.data);\n        let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id && !this.props.myTeam.attributes.groups.find(currGroup => currGroup.activity_id === group.attributes.id));\n        this.setState({\n          groupsAvailable: filteredGroup\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.myTeam !== this.props.myTeam) {\n      fetch(\"http://localhost:3000/api/v1/groups\").then(res => res.json()).then(groups => {\n        if (this.props.add === 0) {\n          this.setState({\n            groupsAvailable: groups.groups.data\n          });\n        } else {\n          console.log(groups.groups.data);\n          let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id);\n          this.setState({\n            groupsAvailable: filteredGroup\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.state.created) {\n      this.setState({\n        created: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/create_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"search-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.groupsAvailable.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.add === 0 && this.props.currentUser !== null ? React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n      },\n      onClick: this.createGroup,\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Create new Group\") : null, this.state.groupsAvailable.map(group => React.createElement(GroupCard, {\n      key: group.id,\n      group: group.attributes,\n      add: this.props.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sorry, there are no groups created for this type of sport yet.\"), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"It's a great opportunity to be the first: \"), React.createElement(NavLink, {\n      to: \"/dashboard\",\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Go back to dashboard...\")));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.currentTeam,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp)(GroupsContainer);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js"],"names":["React","Fragment","Redirect","NavLink","connect","GroupCard","GroupsContainer","Component","state","groupsAvailable","created","createGroup","setState","componentDidMount","fetch","then","res","json","groups","props","add","data","console","log","filteredGroup","filter","group","attributes","activity","id","myTeam","activity_id","find","currGroup","componentDidUpdate","prevProps","render","length","currentUser","marginTop","marginBottom","map","msp","userReducer","teamReducer","currentTeam","sportId","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport GroupCard from './GroupCard';\n\nclass GroupsContainer extends React.Component{\n    state= {\n        groupsAvailable: [],\n        created: false\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/api/v1/groups\")\n        .then(res => res.json())\n        .then(groups => {\n\n            if(this.props.add === 0){\n                this.setState({groupsAvailable: groups.groups.data})\n            }else{\n                console.log(this.props, groups.groups.data)\n                let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id && !this.props.myTeam.attributes.groups.find(currGroup => currGroup.activity_id === group.attributes.id))\n                this.setState({groupsAvailable: filteredGroup})\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.myTeam !== this.props.myTeam){\n            fetch(\"http://localhost:3000/api/v1/groups\")\n            .then(res => res.json())\n            .then(groups => {\n\n                if(this.props.add === 0){\n                    this.setState({groupsAvailable: groups.groups.data})\n                }else{\n                    console.log(groups.groups.data)\n                    let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id)\n                    this.setState({groupsAvailable: filteredGroup})\n                }\n            })\n        }\n    }\n\n    createGroup = () => {\n        this.setState({\n            created: true\n        })\n    }\n\n    render(){\n        if(this.state.created){\n            this.setState({\n                created: false\n            })\n            return <Redirect to=\"/create_group\" />\n        }\n        return (\n        <div className=\"search-main\">\n            {this.state.groupsAvailable.length !== 0 ?\n            <Fragment>\n                {this.props.add === 0 && this.props.currentUser !== null ?\n                    <button style={{marginTop: \"50px\", marginBottom: \"50px\"}} onClick={this.createGroup} className='dash_button'>Create new Group</button>\n                    :\n                    null\n                }\n                {this.state.groupsAvailable.map(group => <GroupCard key={group.id} group={group.attributes} add={this.props.add} />)}\n            </Fragment>\n            :\n            <div className=\"dash_main\">\n                <h1 className=\"main_text\" >Sorry, there are no groups created for this type of sport yet.</h1>\n                <h1 className=\"main_text\" >It's a great opportunity to be the first: </h1>\n                <NavLink to=\"/dashboard\" className=\"main_text\">Go back to dashboard...</NavLink>\n            </div>\n            }\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.currentTeam,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(GroupsContainer)"]},"metadata":{},"sourceType":"module"}