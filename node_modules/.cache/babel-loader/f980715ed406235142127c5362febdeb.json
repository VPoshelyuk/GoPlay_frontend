{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventForm.js\";\nimport React from \"react\"; // import MaskedInput from 'react-maskedinput'\n\nimport DateTimePicker from 'react-datetime-picker';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\n\nclass EventForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      e_logo: null,\n      price: \"Free\",\n      time: \"\",\n      players_per_team: \"\",\n      max_number_of_teams: \"\",\n      description: \"\",\n      address: \"\",\n      loaded: false,\n      added: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addPic = e => {\n      // console.log(e.target.files)\n      this.setState({\n        e_logo: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const fD = new FormData();\n      fD.append(\"name\", this.state.name);\n      fD.append(\"price\", \"Free\");\n      fD.append(\"time\", this.state.time);\n      fD.append(\"e_logo\", this.state.e_logo);\n      fD.append(\"players_per_team\", this.state.players_per_team);\n      fD.append(\"max_number_of_teams\", this.state.max_number_of_teams);\n      fD.append(\"description\", this.state.description);\n      fD.append(\"address\", this.state.address);\n      fD.append(\"group_id\", this.props.myGroup.id);\n      console.log(this.state.max_number_of_teams);\n      fetch(\"http://localhost:3000/api/v1/events\", {\n        method: \"POST\",\n        body: fD\n      }).then(res => res.json()).then(response => this.setState({\n        added: true\n      }));\n    };\n  }\n\n  // componentDidMount(){\n  // }\n  render() {\n    if (this.state.added) {\n      this.setState({\n        added: false\n      });\n      return React.createElement(Redirect, {\n        to: `/group/${this.props.myGroup.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"signup-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field required \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"price\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Time of the Event\"), React.createElement(DateTimePicker, {\n      required: true,\n      className: \"text-input datetime\",\n      disableClock: true,\n      onChange: time => this.setState({\n        time\n      }),\n      value: this.state.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"players_per_team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Players Per Team\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"players_per_team\",\n      name: \"players_per_team\",\n      value: this.state.players_per_team,\n      onChange: this.handleChange,\n      required: true,\n      type: \"number\",\n      min: \"2\",\n      max: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"max_number_of_teams\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Max Team Number\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"max_number_of_teams\",\n      name: \"max_number_of_teams\",\n      value: this.state.max_number_of_teams,\n      onChange: this.handleChange,\n      type: \"number\",\n      min: \"2\",\n      max: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field half required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"e_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Event Picture\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"e_logo\",\n      name: \"e_logo\",\n      onChange: this.addPic,\n      accept: \"image/*\",\n      required: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      cols: \"50\",\n      id: \"address\",\n      name: \"address\",\n      value: this.state.address,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      cols: \"50\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeams: state.userReducer.myTeams,\n    myTeam: state.teamReducer.currentTeam,\n    myGroup: state.teamReducer.currentGroup,\n    password: state.userReducer.password\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(EventForm);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventForm.js"],"names":["React","DateTimePicker","Redirect","connect","setUser","EventForm","Component","state","name","e_logo","price","time","players_per_team","max_number_of_teams","description","address","loaded","added","handleChange","event","setState","target","value","addPic","e","files","handleSubmit","preventDefault","fD","FormData","append","props","myGroup","id","console","log","fetch","method","body","then","res","json","response","render","msp","currentUser","userReducer","myTeams","myTeam","teamReducer","currentTeam","currentGroup","password"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import MaskedInput from 'react-maskedinput'\nimport DateTimePicker from 'react-datetime-picker'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\n\nclass EventForm extends React.Component{\n    state = {\n        name: \"\",\n        e_logo: null,\n        price: \"Free\",\n        time: \"\",\n        players_per_team: \"\",\n        max_number_of_teams: \"\",\n        description: \"\",\n        address: \"\",\n        loaded: false,\n        added: false\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n    \n    addPic = (e) => {\n        // console.log(e.target.files)\n        this.setState({\n            e_logo: e.target.files[0],\n        });\n    }\n\n\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const fD = new FormData()\n        fD.append(\"name\", this.state.name)\n        fD.append(\"price\", \"Free\")\n        fD.append(\"time\", this.state.time)\n        fD.append(\"e_logo\", this.state.e_logo)\n        fD.append(\"players_per_team\", this.state.players_per_team)\n        fD.append(\"max_number_of_teams\", this.state.max_number_of_teams)\n        fD.append(\"description\", this.state.description)\n        fD.append(\"address\", this.state.address)\n        fD.append(\"group_id\", this.props.myGroup.id)\n        console.log(this.state.max_number_of_teams)\n        fetch(\"http://localhost:3000/api/v1/events\", {\n            method: \"POST\",\n            body: fD\n            })\n            .then(res => res.json())\n            .then(response => this.setState({added: true}))\n    }\n\n    // componentDidMount(){\n    // }\n\n    render(){\n        if(this.state.added){\n            this.setState({added: false})\n            return <Redirect to={`/group/${this.props.myGroup.id}`} />\n        }\n        return (\n        <div className=\"signup-main\">\n            <form onSubmit={this.handleSubmit} className='form'>\n            <p className='field required '>\n                <label className='label required' htmlFor='name'>Name</label>\n                <input className='text-input' id='name' name='name' value={this.state.name} onChange={this.handleChange} required type='text'/>\n            </p>\n            <p className='field required half'>\n                <label className='label required' htmlFor='price'>Price</label>\n                <input className='text-input' id='price' name='price' value={this.state.price} onChange={this.handleChange} required type='text'/>\n            </p>\n            <div className='field required half'>\n                <label className='label'>Time of the Event</label>\n                <DateTimePicker\n                    required={true}\n                    className='text-input datetime'\n                    disableClock={true}\n                    onChange={time => this.setState({ time })}\n                    value={this.state.time}\n                />\n                {/* <input className='text-input' id='time' name='time' value={this.state.time} onChange={this.handleChange} required type='time' /> */}\n            </div>\n            <p className='field required half'>\n                <label className='label' htmlFor='players_per_team'>Players Per Team</label>\n                <input className='text-input' id='players_per_team' name='players_per_team' value={this.state.players_per_team} onChange={this.handleChange} required type='number' min=\"2\" max=\"15\" />\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='max_number_of_teams'>Max Team Number</label>\n                <input className='text-input' id='max_number_of_teams' name='max_number_of_teams' value={this.state.max_number_of_teams} onChange={this.handleChange} type='number' min=\"2\" max=\"32\"/>\n            </p>\n            <p className='field half required'>\n                <label className='label' htmlFor='e_logo'>Event Picture</label>\n                <input className='text-input' id='e_logo' name='e_logo' onChange={this.addPic} accept=\"image/*\" required type='file'/>\n            </p>\n            <p className='field half'>\n                <label className='label' htmlFor='address'>Address</label>\n                <input className='text-input' cols='50' id='address' name='address' value={this.state.address} onChange={this.handleChange} />\n            </p>\n            <p className='field'>\n                <label className='label' htmlFor='description'>Description</label>\n                <textarea className='textarea' cols='50' id='description' name='description' value={this.state.description} onChange={this.handleChange} rows='4'></textarea>\n            </p>\n            <p className='field'>\n                <input className='button' type='submit' value='Sign Up' />\n            </p>\n            </form>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n      currentUser: state.userReducer.currentUser,\n      myTeams: state.userReducer.myTeams,\n      myTeam: state.teamReducer.currentTeam,\n      myGroup: state.teamReducer.currentGroup,\n      password: state.userReducer.password\n    }\n}\n\nexport default connect(msp, { setUser })(EventForm)\n"]},"metadata":{},"sourceType":"module"}