{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventForm.js\";\nimport React from \"react\";\nimport MaskedInput from 'react-maskedinput';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      event_pic: null,\n      price: \"\",\n      datetime: \"\",\n      location: \"\",\n      players_per_team: \"\",\n      max_num_of_teams: \"\",\n      birthday: \"\",\n      gender: \"\",\n      description: \"\",\n      won_games: 0,\n      tie_games: 0,\n      lost_games: 0,\n      admin: 0,\n      activity_ids: [],\n      password: \"\",\n      passwordConfirmation: \"\",\n      loaded: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleDateChange = event => {\n      let value = event.target.value;\n      event.target.value = value.replace(/^([\\d]{2})([\\d]{2})([\\d]{4})$/, \"$1/$2/$3\");\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addPic = e => {\n      // console.log(e.target.files)\n      this.setState({\n        event_pic: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const fD = new FormData();\n      fD.append(\"first_name\", this.state.first_name);\n      fD.append(\"price\", this.state.price);\n      fD.append(\"datetime\", this.state.datetime);\n      fD.append(\"event_pic\", this.state.event_pic);\n      fD.append(\"location\", this.state.location);\n      fD.append(\"players_per_team\", this.state.players_per_team);\n      fD.append(\"max_num_of_teams\", this.state.max_num_of_teams);\n      fD.append(\"birthday\", this.state.birthday);\n      fD.append(\"gender\", this.state.gender);\n      fD.append(\"description\", this.state.description);\n      fD.append(\"password\", this.state.password);\n      fD.append(\"admin\", 0);\n      fD.append(\"won_games\", 0);\n      fD.append(\"lost_games\", 0);\n      fD.append(\"tie_games\", 0);\n      console.log(this.state.event_pic);\n\n      if (this.state.password === this.state.passwordConfirmation) {\n        fetch(\"http://localhost:3000/api/v1/signup\", {\n          method: \"POST\",\n          body: fD\n        }).then(res => res.json()).then(response => {\n          if (response.errors) {\n            alert(response.errors);\n          } else {\n            let token = response.token;\n            fetch(\"http://localhost:3000/api/v1/user_activities\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user_id: response.user.data.attributes.id,\n                sports: this.state.activity_ids\n              })\n            }).then(setTimeout(() => {\n              fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                headers: {\n                  \"authorization\": token\n                }\n              }).then(res => res.json()).then(user => {\n                if (user.errors) {\n                  alert(user.errors);\n                } else {\n                  this.props.setUser(user);\n                  localStorage.token = user.token;\n                  this.setState({\n                    first_name: \"\",\n                    price: \"\",\n                    datetime: \"\",\n                    location: \"\",\n                    players_per_team: \"\",\n                    max_num_of_teams: \"\",\n                    birthday: \"\",\n                    gender: \"\",\n                    description: \"\",\n                    admin: 0,\n                    activity_ids: [],\n                    password: \"\",\n                    passwordConfirmation: \"\",\n                    loaded: true\n                  });\n                }\n              });\n            }, 1000));\n          }\n        });\n      } else {\n        alert(\"Passwords don't match!\");\n      }\n    };\n  }\n\n  // componentDidMount(){\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field required \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"price\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      required: true,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"datetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Time of the Event\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"datetime\",\n      name: \"datetime\",\n      value: this.state.datetime,\n      onChange: this.handleChange,\n      required: true,\n      type: \"datetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"players_per_team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Players per Team\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"players_per_team\",\n      name: \"players_per_team\",\n      value: this.state.players_per_team,\n      onChange: this.handleChange,\n      required: true,\n      type: \"number\",\n      min: \"2\",\n      max: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"max_num_of_teams\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Max Team Number\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"max_num_of_teams\",\n      name: \"max_num_of_teams\",\n      value: this.state.max_num_of_teams,\n      onChange: this.handleChange,\n      type: \"number\",\n      min: \"2\",\n      max: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"event_pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Event Picture\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"event_pic\",\n      name: \"event_pic\",\n      onChange: this.addPic,\n      accept: \"image/*\",\n      required: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      cols: \"50\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    players_per_team: state.userReducer.players_per_team,\n    password: state.userReducer.password\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(SignUp);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventForm.js"],"names":["React","MaskedInput","Redirect","connect","setUser","SignUp","Component","state","name","event_pic","price","datetime","location","players_per_team","max_num_of_teams","birthday","gender","description","won_games","tie_games","lost_games","admin","activity_ids","password","passwordConfirmation","loaded","handleChange","event","setState","target","value","handleDateChange","replace","addPic","e","files","handleSubmit","preventDefault","fD","FormData","append","first_name","console","log","fetch","method","body","then","res","json","response","errors","alert","token","headers","JSON","stringify","user_id","user","data","attributes","id","sports","setTimeout","props","localStorage","render","msp","currentUser","userReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaskedInput from 'react-maskedinput'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\n\nclass SignUp extends React.Component{\n    state = {\n        name: \"\",\n        event_pic: null,\n        price: \"\",\n        datetime: \"\",\n        location: \"\",\n        players_per_team: \"\",\n        max_num_of_teams: \"\",\n        birthday: \"\",\n        gender: \"\",\n        description: \"\",\n        won_games: 0,\n        tie_games: 0,\n        lost_games: 0,\n        admin: 0,\n        activity_ids: [],\n        password: \"\",\n        passwordConfirmation: \"\",\n        loaded: false\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    handleDateChange = (event) => {\n        let value = event.target.value;       \n        event.target.value = value.replace(/^([\\d]{2})([\\d]{2})([\\d]{4})$/,\"$1/$2/$3\");        \n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n    \n    addPic = (e) => {\n        // console.log(e.target.files)\n        this.setState({\n            event_pic: e.target.files[0],\n        });\n    }\n\n\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const fD = new FormData()\n        fD.append(\"first_name\", this.state.first_name)\n        fD.append(\"price\", this.state.price)\n        fD.append(\"datetime\", this.state.datetime)\n        fD.append(\"event_pic\", this.state.event_pic)\n        fD.append(\"location\", this.state.location)\n        fD.append(\"players_per_team\", this.state.players_per_team)\n        fD.append(\"max_num_of_teams\", this.state.max_num_of_teams)\n        fD.append(\"birthday\", this.state.birthday)\n        fD.append(\"gender\", this.state.gender)\n        fD.append(\"description\", this.state.description)\n        fD.append(\"password\", this.state.password)\n        fD.append(\"admin\", 0)\n        fD.append(\"won_games\", 0)\n        fD.append(\"lost_games\", 0)\n        fD.append(\"tie_games\", 0)\n        console.log(this.state.event_pic)\n        if (this.state.password === this.state.passwordConfirmation){\n            fetch(\"http://localhost:3000/api/v1/signup\", {\n            method: \"POST\",\n            body: fD\n            })\n            .then(res => res.json())\n            .then(response => {\n                if(response.errors){\n                    alert(response.errors)\n                } else {\n                    let token = response.token\n                    fetch(\"http://localhost:3000/api/v1/user_activities\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Accept\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: response.user.data.attributes.id,\n                            sports: this.state.activity_ids\n                        })\n                    })\n                    .then(\n                        setTimeout(() => {\n                            fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                                headers: {\n                                \"authorization\": token\n                                }\n                            })\n                            .then(res => res.json())\n                            .then(user =>{\n                                if (user.errors){\n                                alert(user.errors)\n                                } else {\n                                this.props.setUser(user)\n                                localStorage.token = user.token\n                                this.setState({\n                                    first_name: \"\",\n                                    price: \"\",\n                                    datetime: \"\",\n                                    location: \"\",\n                                    players_per_team: \"\",\n                                    max_num_of_teams: \"\",\n                                    birthday: \"\",\n                                    gender: \"\",\n                                    description: \"\",\n                                    admin: 0,\n                                    activity_ids: [],\n                                    password: \"\",\n                                    passwordConfirmation: \"\",\n                                    loaded: true\n                                })\n                                }\n                            })\n                        }, 1000)\n                    )\n                }\n                })\n        } else {\n            alert(\"Passwords don't match!\")\n        }\n\n    }\n\n    // componentDidMount(){\n    // }\n\n    render(){\n        return (\n        <div className=\"signup-main\">\n            <form onSubmit={this.handleSubmit} className='form'>\n            <p className='field required '>\n                <label className='label required' htmlFor='name'>Name</label>\n                <input className='text-input' id='name' name='name' value={this.state.name} onChange={this.handleChange} required type='text'/>\n            </p>\n            <p className='field required half'>\n                <label className='label required' htmlFor='price'>Last name</label>\n                <input className='text-input' id='price' name='price' value={this.state.price} onChange={this.handleChange} required type='number'/>\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='datetime'>Time of the Event</label>\n                <input className='text-input' id='datetime' name='datetime' value={this.state.datetime} onChange={this.handleChange} required type='datetime' />\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='players_per_team'>Players per Team</label>\n                <input className='text-input' id='players_per_team' name='players_per_team' value={this.state.players_per_team} onChange={this.handleChange} required type='number' min=\"2\" max=\"15\" />\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='max_num_of_teams'>Max Team Number</label>\n                <input className='text-input' id='max_num_of_teams' name='max_num_of_teams' value={this.state.max_num_of_teams} onChange={this.handleChange} type='number' min=\"2\" max=\"32\"/>\n            </p>\n            <p className='field required'>\n                <label className='label' htmlFor='event_pic'>Event Picture</label>\n                <input className='text-input' id='event_pic' name='event_pic' onChange={this.addPic} accept=\"image/*\" required type='file'/>\n            </p>\n            <p className='field'>\n                <label className='label' htmlFor='description'>Description</label>\n                <textarea className='textarea' cols='50' id='description' name='description' value={this.state.description} onChange={this.handleChange} rows='4'></textarea>\n            </p>\n            <p className='field'>\n                <input className='button' type='submit' value='Sign Up' />\n            </p>\n            </form>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n      currentUser: state.userReducer.currentUser,\n      players_per_team: state.userReducer.players_per_team,\n      password: state.userReducer.password\n    }\n}\n\nexport default connect(msp, { setUser })(SignUp)\n"]},"metadata":{},"sourceType":"module"}