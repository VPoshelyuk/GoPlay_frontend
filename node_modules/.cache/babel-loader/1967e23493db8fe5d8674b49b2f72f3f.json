{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamCard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect, NavLink, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\n\nclass TeamSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      joined: false\n    };\n\n    this.joinTeam = () => {\n      fetch(\"http://localhost:3000/api/v1/user_teams\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.user.data.id,\n          team_id: this.props.team.id,\n          signup_won_games: this.props.team.won_games,\n          signup_tie_games: this.props.team.tie_games,\n          signup_lost_games: this.props.team.lost_games\n        })\n      });\n      this.props.team.events.forEach(event => fetch(\"http://localhost:3000/api/v1/user_events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.user.data.id,\n          event_id: event.id\n        })\n      }));\n      fetch(`http://localhost:3000/api/v1/teams/${this.props.team.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          number_of_members: this.props.team.number_of_members + 1\n        })\n      }).then(setTimeout(() => {\n        fetch(\"http://localhost:3000/api/v1/auto_login\", {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => res.json()).then(user => {\n          if (user.errors) {\n            alert(user.errors);\n          } else {\n            this.props.setUser(user);\n            localStorage.token = user.token;\n            this.setState({\n              joined: true\n            });\n          }\n        });\n      }, 1000));\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    if (this.state.joined) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.dash_style ? React.createElement(NavLink, {\n      to: `/dashboard`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      style: {\n        backgroundImage: `url(${this.props.team.logo_path})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"figcaption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.team.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.props.team.location)))) : React.createElement(\"div\", {\n      onClick: this.props.profile_acc ? null : this.joinTeam,\n      className: \"team_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group_logo_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"group_logo\",\n      src: this.props.team.logo,\n      alt: \"team_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"group_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.team.location), React.createElement(\"p\", {\n      className: \"team_mem_num\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Number of members:\", this.props.team.number_of_members), this.props.team.users.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Events\"), this.props.team.users.length > 5 ? React.createElement(\"div\", {\n      className: \"avatars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.team.users.sort(() => 0.5 - Math.random()).slice(0, 4).map(user => React.createElement(\"span\", {\n      className: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: user.profile_pic_path,\n      title: user.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"avatar\",\n      style: {\n        backgroundColor: \"#E8474C\"\n      },\n      title: \"More users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"+\", this.props.team.users.length - 4))) : React.createElement(\"div\", {\n      className: \"avatars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.team.users.sort(() => 0.5 - Math.random()).map(user => React.createElement(\"span\", {\n      className: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/groups/${this.props.group.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: user.profile_pic_path,\n      title: user.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))))) : null, React.createElement(\"div\", {\n      className: \"team_scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Games won: \", this.props.team.won_games), React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Ties: \", this.props.team.tie_games), React.createElement(\"p\", {\n      className: \"team_score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Games lost: \", this.props.team.lost_games))), React.createElement(\"div\", {\n      className: \"group_info_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.team.name), React.createElement(\"h2\", {\n      className: \"group_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.props.team.description)), this.props.add === 1 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleAddGroup,\n      style: {\n        marginTop: \"20px\",\n        width: \"70%\",\n        marginRight: \"2.5%\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Join Team\")) : null)); // <div onClick={this.props.profile_acc? null : this.joinTeam} className=\"regular_card\">\n    //     <h1 className=\"team_name\">{this.props.team.name}</h1>\n    //     <p className=\"team_location\">{this.props.team.location}</p>\n    //     <p className=\"team_mem_num\">{this.props.team.number_of_members}</p>\n    //     <img className=\"team_logo\" src={this.props.team.logo_path} alt=\"team_logo\" />\n    //     <h2 className=\"team_desc\">{this.props.team.description}</h2>\n    //     <div className=\"team_scores\">\n    //         <p className=\"team_score\">{this.props.team.won_games}</p>\n    //         <p className=\"team_score\">{this.props.team.tie_games}</p>\n    //         <p className=\"team_score\">{this.props.team.lost_games}</p>\n    //     </div>\n    // </div>\n    // );\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(TeamSearch);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamCard.js"],"names":["React","Fragment","Redirect","NavLink","Link","connect","setUser","TeamSearch","Component","state","joined","joinTeam","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","user","data","id","team_id","team","signup_won_games","won_games","signup_tie_games","tie_games","signup_lost_games","lost_games","events","forEach","event","event_id","number_of_members","then","setTimeout","localStorage","token","res","json","errors","alert","setState","render","console","log","dash_style","backgroundImage","logo_path","name","location","profile_acc","logo","users","length","marginTop","sort","Math","random","slice","map","profile_pic_path","username","backgroundColor","group","description","add","handleAddGroup","width","marginRight","msp","userReducer","sportId","teamReducer","currentSportId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,IAA5B,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAD4B;;AAAA,SAKpCC,QALoC,GAKzB,MAAM;AACbC,MAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7CC,QAAAA,MAAM,EAAE,MADqC;AAE7CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFoC;AAM7CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,EADzB;AAEjBC,UAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,IAAX,CAAgBF,EAFR;AAGjBG,UAAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWM,IAAX,CAAgBE,SAHjB;AAIjBC,UAAAA,gBAAgB,EAAE,KAAKT,KAAL,CAAWM,IAAX,CAAgBI,SAJjB;AAKjBC,UAAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWM,IAAX,CAAgBM;AALlB,SAAf;AANuC,OAA5C,CAAL;AAcA,WAAKZ,KAAL,CAAWM,IAAX,CAAgBO,MAAhB,CAAuBC,OAAvB,CAA+BC,KAAK,IAChCtB,KAAK,CAAC,0CAAD,EAA6C;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFyC;AAMlDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,EADzB;AAEjBY,UAAAA,QAAQ,EAAED,KAAK,CAACX;AAFC,SAAf;AAN4C,OAA7C,CADT;AAaAX,MAAAA,KAAK,CAAE,sCAAqC,KAAKO,KAAL,CAAWM,IAAX,CAAgBF,EAAG,EAA1D,EAA6D;AAC9DV,QAAAA,MAAM,EAAE,OADsD;AAE9DC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFqD;AAM9DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBmB,UAAAA,iBAAiB,EAAE,KAAKjB,KAAL,CAAWM,IAAX,CAAgBW,iBAAhB,GAAoC;AADtC,SAAf;AANwD,OAA7D,CAAL,CAUCC,IAVD,CAWIC,UAAU,CAAC,MAAM;AACb1B,QAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7CE,UAAAA,OAAO,EAAE;AACT,6BAAiByB,YAAY,CAACC;AADrB;AADoC,SAA5C,CAAL,CAKCH,IALD,CAKMI,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCL,IAND,CAMMhB,IAAI,IAAG;AACT,cAAIA,IAAI,CAACsB,MAAT,EAAgB;AAChBC,YAAAA,KAAK,CAACvB,IAAI,CAACsB,MAAN,CAAL;AACC,WAFD,MAEO;AACP,iBAAKxB,KAAL,CAAWb,OAAX,CAAmBe,IAAnB;AACAkB,YAAAA,YAAY,CAACC,KAAb,GAAqBnB,IAAI,CAACmB,KAA1B;AACA,iBAAKK,QAAL,CAAc;AACVnC,cAAAA,MAAM,EAAE;AADE,aAAd;AAGC;AACJ,SAhBD;AAiBH,OAlBS,EAkBP,IAlBO,CAXd;AA+BH,KAhEmC;AAAA;;AAkEpCoC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAjB;AACA,QAAG,KAAKV,KAAL,CAAWC,MAAd,EAAsB,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACtB,WACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEY,KAAKS,KAAL,CAAW8B,UAAX,GACA,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAG,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAG,OAAM,KAAK/B,KAAL,CAAWM,IAAX,CAAgB0B,SAAU;AAAnD,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKhC,KAAL,CAAWM,IAAX,CAAgB2B,IAAvB,CAAL,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKjC,KAAL,CAAWM,IAAX,CAAgB4B,QAApB,CAHJ,CADJ,CADJ,CADA,GAWA;AAAK,MAAA,OAAO,EAAE,KAAKlC,KAAL,CAAWmC,WAAX,GAAwB,IAAxB,GAA+B,KAAK3C,QAAlD;AAA4D,MAAA,SAAS,EAAC,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWM,IAAX,CAAgB8B,IAAjD;AAAuD,MAAA,GAAG,EAAC,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKpC,KAAL,CAAWM,IAAX,CAAgB4B,QAA/C,CAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA+C,KAAKlC,KAAL,CAAWM,IAAX,CAAgBW,iBAA/D,CAHJ,EAIK,KAAKjB,KAAL,CAAWM,IAAX,CAAgB+B,KAAhB,CAAsBC,MAAtB,KAAiC,CAAjC,GACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEC,KAAKvC,KAAL,CAAWM,IAAX,CAAgB+B,KAAhB,CAAsBC,MAAtB,GAA+B,CAA/B,GACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtC,KAAL,CAAWM,IAAX,CAAgB+B,KAAhB,CAAsBG,IAAtB,CAA2B,MAAM,MAAMC,IAAI,CAACC,MAAL,EAAvC,EAAsDC,KAAtD,CAA4D,CAA5D,EAA+D,CAA/D,EAAkEC,GAAlE,CAAsE1C,IAAI,IAAI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B;AAAM,MAAA,GAAG,EAAEA,IAAI,CAAC2C,gBAAhB;AAAkC,MAAA,KAAK,EAAE3C,IAAI,CAAC4C,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAA9E,CADL,EAEI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAAhC;AAA8D,MAAA,KAAK,EAAC,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAK/C,KAAL,CAAWM,IAAX,CAAgB+B,KAAhB,CAAsBC,MAAtB,GAA+B,CAArC,CAAjF,CAFJ,CADH,GAMG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtC,KAAL,CAAWM,IAAX,CAAgB+B,KAAhB,CAAsBG,IAAtB,CAA2B,MAAM,MAAMC,IAAI,CAACC,MAAL,EAAvC,EAAsDE,GAAtD,CAA0D1C,IAAI,IAAI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAU,KAAKF,KAAL,CAAWgD,KAAX,CAAiB5C,EAAG,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C;AAAM,MAAA,GAAG,EAAEF,IAAI,CAAC2C,gBAAhB;AAAkC,MAAA,KAAK,EAAE3C,IAAI,CAAC4C,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CAAzB,CAAlE,CADL,CARJ,CADH,GAeG,IAnBR,EAqBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsC,KAAK9C,KAAL,CAAWM,IAAX,CAAgBE,SAAtD,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiC,KAAKR,KAAL,CAAWM,IAAX,CAAgBI,SAAjD,CAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuC,KAAKV,KAAL,CAAWM,IAAX,CAAgBM,UAAvD,CAHJ,CArBJ,CADJ,EA4BI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKZ,KAAL,CAAWM,IAAX,CAAgB2B,IAA5C,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKjC,KAAL,CAAWM,IAAX,CAAgB2C,WAA5C,CAFJ,CA5BJ,EAgCK,KAAKjD,KAAL,CAAWkD,GAAX,KAAmB,CAAnB,GACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKC,cAAtB;AAAsC,MAAA,KAAK,EAAE;AAACZ,QAAAA,SAAS,EAAE,MAAZ;AAAoBa,QAAAA,KAAK,EAAE,KAA3B;AAAkCC,QAAAA,WAAW,EAAE;AAA/C,OAA7C;AAAqG,MAAA,SAAS,EAAC,aAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADC,GAKD,IArCJ,CAbZ,CADA,CAHI,CA4DJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AA3ImC;;AA8IxC,SAASC,GAAT,CAAahE,KAAb,EAAmB;AACf,SAAO;AACHW,IAAAA,WAAW,EAAEX,KAAK,CAACiE,WAAN,CAAkBtD,WAD5B;AAEHuD,IAAAA,OAAO,EAAElE,KAAK,CAACmE,WAAN,CAAkBC;AAFxB,GAAP;AAIH;;AAED,eAAexE,OAAO,CAACoE,GAAD,EAAM;AAAEnE,EAAAA;AAAF,CAAN,CAAP,CAA0BC,UAA1B,CAAf","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect, NavLink, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\n\nclass TeamSearch extends React.Component{\n    state = {\n        joined: false\n    }\n\n    joinTeam = () => {\n        fetch(\"http://localhost:3000/api/v1/user_teams\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.user.data.id,\n                team_id: this.props.team.id,\n                signup_won_games: this.props.team.won_games,\n                signup_tie_games: this.props.team.tie_games,\n                signup_lost_games: this.props.team.lost_games\n            })\n        })\n        this.props.team.events.forEach(event =>\n            fetch(\"http://localhost:3000/api/v1/user_events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.user.data.id,\n                event_id: event.id\n            })\n            })\n        )\n        fetch(`http://localhost:3000/api/v1/teams/${this.props.team.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                number_of_members: this.props.team.number_of_members + 1\n            })\n        })\n        .then(\n            setTimeout(() => {\n                fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                    headers: {\n                    \"authorization\": localStorage.token\n                    }\n                })\n                .then(res => res.json())\n                .then(user =>{\n                    if (user.errors){\n                    alert(user.errors)\n                    } else {\n                    this.props.setUser(user)\n                    localStorage.token = user.token\n                    this.setState({\n                        joined: true\n                    })\n                    }\n                })\n            }, 1000)\n        )\n    }\n\n    render(){\n        console.log(this.props)\n        if(this.state.joined) return <Redirect to=\"/dashboard\" />\n        return (\n        <Fragment>\n                {\n                    this.props.dash_style?\n                    <NavLink to={`/dashboard`}>\n                        <figure style={{backgroundImage: `url(${this.props.team.logo_path})`}}>\n                            <figcaption>\n                                <h4> <span>{this.props.team.name}</span></h4>\n                                {/* <h4> <span>{this.props.team.location}</span></h4> */}\n                                <p>{this.props.team.location}</p>\n                            </figcaption>\n                        </figure>\n                    </NavLink>\n                    :\n                    <div onClick={this.props.profile_acc? null : this.joinTeam} className=\"team_card\">\n                        <div className=\"group_logo_div\">\n                            <img className=\"group_logo\" src={this.props.team.logo} alt=\"team_logo\" />\n                            <p className=\"group_location\">{this.props.team.location}</p>\n                            <p className=\"team_mem_num\">Number of members:{this.props.team.number_of_members}</p>\n                            {this.props.team.users.length !== 0 ?\n                                <Fragment>\n                                <p style={{marginTop: \"10px\"}}>Events</p>\n                                {this.props.team.users.length > 5 ?\n                                    <div className=\"avatars\">\n                                        {this.props.team.users.sort(() => 0.5 - Math.random()).slice(0, 4).map(user => <span className=\"avatar\" ><img  src={user.profile_pic_path} title={user.username} /></span>)}\n                                        <span className=\"avatar\" style={{backgroundColor: \"#E8474C\"}} title=\"More users\"><h1>+{this.props.team.users.length - 4}</h1></span>\n                                    </div>\n                                    :\n                                    <div className=\"avatars\">\n                                        {this.props.team.users.sort(() => 0.5 - Math.random()).map(user => <span className=\"avatar\"><Link to={`/groups/${this.props.group.id}`}><img  src={user.profile_pic_path} title={user.username} /></Link></span>)}\n                                    </div>\n                                }\n                                </Fragment>\n                                :\n                                null\n                            }\n                            <div className=\"team_scores\">\n                                <p className=\"team_score\">Games won: {this.props.team.won_games}</p>\n                                <p className=\"team_score\">Ties: {this.props.team.tie_games}</p>\n                                <p className=\"team_score\">Games lost: {this.props.team.lost_games}</p>\n                            </div>\n                        </div>\n                        <div className=\"group_info_div\">\n                            <h1 className=\"group_name\">{this.props.team.name}</h1>\n                            <h2 className=\"group_desc\">{this.props.team.description}</h2>\n                        </div>\n                        {this.props.add === 1 ?\n                        <Fragment>\n                            <button onClick={this.handleAddGroup} style={{marginTop: \"20px\", width: \"70%\", marginRight: \"2.5%\"}} className='dash_button'>Join Team</button>\n                        </Fragment>\n                        :\n                        null\n                        }\n                    </div>\n                }\n            </Fragment>\n        );\n        // <div onClick={this.props.profile_acc? null : this.joinTeam} className=\"regular_card\">\n        //     <h1 className=\"team_name\">{this.props.team.name}</h1>\n        //     <p className=\"team_location\">{this.props.team.location}</p>\n        //     <p className=\"team_mem_num\">{this.props.team.number_of_members}</p>\n        //     <img className=\"team_logo\" src={this.props.team.logo_path} alt=\"team_logo\" />\n        //     <h2 className=\"team_desc\">{this.props.team.description}</h2>\n        //     <div className=\"team_scores\">\n        //         <p className=\"team_score\">{this.props.team.won_games}</p>\n        //         <p className=\"team_score\">{this.props.team.tie_games}</p>\n        //         <p className=\"team_score\">{this.props.team.lost_games}</p>\n        //     </div>\n        // </div>\n        // );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { setUser })(TeamSearch)"]},"metadata":{},"sourceType":"module"}