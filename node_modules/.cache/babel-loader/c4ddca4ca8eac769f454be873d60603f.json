{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupSignUp.js\";\nimport React from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\nimport ImageUploader from 'react-images-upload';\n\nclass TeamSignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      logo_path: \"\",\n      description: \"\",\n      picture: [],\n      created: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:3000/api/v1/teams\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          location: this.props.currentUser.user.data.attributes.location,\n          number_of_members: 1,\n          logo_path: this.state.logo_path,\n          description: this.state.description,\n          won_games: 0,\n          tie_games: 0,\n          lost_games: 0,\n          admin_id: this.props.currentUser.user.data.id,\n          activity_id: this.props.sportId\n        })\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n        fetch(\"http://localhost:3000/api/v1/user_teams\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: this.props.currentUser.user.data.id,\n            team_id: response.team.data.id,\n            signup_won_games: response.team.data.attributes.won_games,\n            signup_tie_games: response.team.data.attributes.tie_games,\n            signup_lost_games: response.team.data.attributes.lost_games\n          })\n        }).then(res => res.json()).then(response => {\n          setTimeout(() => {\n            fetch(\"http://localhost:3000/api/v1/auto_login\", {\n              headers: {\n                \"authorization\": localStorage.token\n              }\n            }).then(res => res.json()).then(user => {\n              if (user.errors) {\n                alert(user.errors);\n              } else {\n                this.props.setUser(user);\n                localStorage.token = user.token;\n                this.setState({\n                  name: \"\",\n                  logo_path: \"\",\n                  description: \"\",\n                  created: true\n                });\n              }\n            });\n          }, 1000);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.state.created) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"select\", {\n      className: \"select\",\n      value: this.state.location,\n      onChange: this.handleChange,\n      name: \"location\",\n      id: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"New York, NY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"New York, NY\"), React.createElement(\"option\", {\n      value: \"Los Angeles, CA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Los Angeles, CA\"), React.createElement(\"option\", {\n      value: \"Miami, FL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Miami, FL\"))), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"logo_path\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"logo_path\",\n      name: \"logo_path\",\n      value: this.state.logo_path,\n      onChange: this.handleChange,\n      required: true,\n      type: \"logo_path\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      cols: \"50\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Create a team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(NavLink, {\n      to: \"/dashboard\",\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Go back to dashboard...\"));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(TeamSignUp);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupSignUp.js"],"names":["React","Redirect","NavLink","connect","setUser","ImageUploader","TeamSignUp","Component","state","name","logo_path","description","picture","created","handleChange","event","setState","target","value","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","location","props","currentUser","user","data","attributes","number_of_members","won_games","tie_games","lost_games","admin_id","id","activity_id","sportId","then","res","json","response","console","log","user_id","team_id","team","signup_won_games","signup_tie_games","signup_lost_games","setTimeout","localStorage","token","errors","alert","componentDidMount","render","msp","userReducer","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\nimport ImageUploader from 'react-images-upload';\n\nclass TeamSignUp extends React.Component{\n    state = {\n        name: \"\",\n        logo_path: \"\",\n        description: \"\",\n        picture: [],\n        created: false\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    // onDrop = (picture) => {\n    //     this.setState({\n    //         pictures: this.state.pictures.concat(picture),\n    //     });\n    // }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n            fetch(\"http://localhost:3000/api/v1/teams\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                location: this.props.currentUser.user.data.attributes.location,\n                number_of_members: 1,\n                logo_path: this.state.logo_path,\n                description: this.state.description,\n                won_games: 0,\n                tie_games: 0,\n                lost_games: 0,\n                admin_id: this.props.currentUser.user.data.id,\n                activity_id: this.props.sportId\n            })\n            })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                fetch(\"http://localhost:3000/api/v1/user_teams\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: this.props.currentUser.user.data.id,\n                    team_id: response.team.data.id,\n                    signup_won_games: response.team.data.attributes.won_games,\n                    signup_tie_games: response.team.data.attributes.tie_games,\n                    signup_lost_games: response.team.data.attributes.lost_games\n                })\n                })\n                .then(res => res.json())\n                .then(response => {\n                    setTimeout(() => {\n                        fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                            headers: {\n                            \"authorization\": localStorage.token\n                            }\n                        })\n                        .then(res => res.json())\n                        .then(user =>{\n                            if (user.errors){\n                            alert(user.errors)\n                            } else {\n                            this.props.setUser(user)\n                            localStorage.token = user.token\n                            this.setState({\n                                name: \"\",\n                                logo_path: \"\",\n                                description: \"\",\n                                created: true\n                            })\n                            }\n                        })\n                    }, 1000)\n                })\n            })\n    }\n\n    componentDidMount(){\n    }\n      \n    \n\n    render(){\n        if(this.state.created) return <Redirect to=\"/dashboard\" />\n        return (\n        <div className=\"dash_main\">\n            <form onSubmit={this.handleSubmit} className='form'>\n            <p className='field required'>\n                <label className='label required' htmlFor='name'>Name</label>\n                <input className='text-input' id='name' name='name' value={this.state.name} onChange={this.handleChange} required type='text'/>\n            </p>\n            {/* <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n            /> */}\n            <p className='field half'>\n                <label className='label' htmlFor='select'>Location</label>\n                <select className='select' value={this.state.location} onChange={this.handleChange} name=\"location\" id='select'>\n                <option value=''></option>\n                <option value='New York, NY'>New York, NY</option>\n                <option value='Los Angeles, CA'>Los Angeles, CA</option>\n                <option value='Miami, FL'>Miami, FL</option>\n                </select>\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='logo_path'>Logo</label>\n                <input className='text-input' id='logo_path' name='logo_path' value={this.state.logo_path} onChange={this.handleChange} required type='logo_path' />\n            </p>\n            <p className='field'>\n                <label className='label' htmlFor='description'>Description</label>\n                <textarea className='textarea' cols='50' id='description' name='description' value={this.state.description} onChange={this.handleChange} rows='4'></textarea>\n            </p>\n            <p className='field'>\n                <input className='button' type='submit' value='Create a team' />\n            </p>\n            </form>\n            <NavLink to=\"/dashboard\" className=\"main_text\">Go back to dashboard...</NavLink>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { setUser })(TeamSignUp)"]},"metadata":{},"sourceType":"module"}