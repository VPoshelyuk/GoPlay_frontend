{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GroupCard from './GroupCard';\n\nclass GroupsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      groupsAvailable: [],\n      unfilteredAvailable: [],\n      created: false\n    };\n\n    this.handleChange = event => {\n      switch (event.target.value) {\n        case 'New York, NY':\n        case 'Los Angeles, CA':\n        case 'Miami, FL':\n          this.setState({\n            groupsAvailable: this.state.unfilteredAvailable.filter(group => group.attributes.location === event.target.value)\n          });\n          break;\n\n        case 'Soccer':\n        case 'Volleyball':\n        case 'Basketball':\n        case 'Football':\n        case 'Baseball':\n        case 'Ice Hockey':\n          this.setState({\n            groupsAvailable: this.state.unfilteredAvailable.filter(group => group.attributes.activity.name === event.target.value)\n          });\n          break;\n\n        case 'event_number':\n          this.setState({\n            groupsAvailable: this.state.unfilteredAvailable.sort((a, b) => b.attributes.events.length - a.attributes.events.length)\n          });\n          break;\n\n        case 'team_number':\n          this.setState({\n            groupsAvailable: this.state.unfilteredAvailable.sort((a, b) => b.attributes.teams.length - a.attributes.teams.length)\n          });\n          break;\n\n        default:\n          this.setState({\n            groupsAvailable: this.state.unfilteredAvailable\n          });\n          break;\n      }\n    };\n\n    this.createGroup = () => {\n      this.setState({\n        created: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/groups\").then(res => res.json()).then(groups => {\n      if (this.props.add === 0) {\n        this.setState({\n          groupsAvailable: groups.groups.data,\n          unfilteredAvailable: groups.groups.data\n        });\n      } else {\n        console.log(this.props, groups.groups.data);\n        let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id && !this.props.myTeam.attributes.groups.find(currGroup => currGroup.id === group.attributes.id));\n        this.setState({\n          groupsAvailable: filteredGroup\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.myTeam !== this.props.myTeam) {\n      fetch(\"http://localhost:3000/api/v1/groups\").then(res => res.json()).then(groups => {\n        if (this.props.add === 0) {\n          this.setState({\n            groupsAvailable: groups.groups.data,\n            unfilteredAvailable: groups.groups.data\n          });\n        } else {\n          console.log(groups.groups.data);\n          let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id);\n          this.setState({\n            groupsAvailable: filteredGroup\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.state.created) {\n      this.setState({\n        created: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/create_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"search-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.props.add === 0 ? React.createElement(\"form\", {\n      onChange: this.handleChange,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field\",\n      style: {\n        right: \"0\",\n        marginTop: \"-20px\",\n        marginBottom: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select\",\n      style: {\n        textAlignLast: \"center\"\n      },\n      defaultValue: \"\",\n      name: \"location\",\n      id: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Sort or filter by:\"), React.createElement(\"option\", {\n      value: \"location\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Filter by location:\"), React.createElement(\"option\", {\n      value: \"New York, NY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"New York, NY\"), React.createElement(\"option\", {\n      value: \"Los Angeles, CA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Los Angeles, CA\"), React.createElement(\"option\", {\n      value: \"Miami, FL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Miami, FL\"), React.createElement(\"option\", {\n      value: \"sport\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Filter by sport:\"), React.createElement(\"option\", {\n      value: \"Soccer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Soccer\"), React.createElement(\"option\", {\n      value: \"Football\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Football\"), React.createElement(\"option\", {\n      value: \"Basketball\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Basketball\"), React.createElement(\"option\", {\n      value: \"Volleyball\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Volleyball\"), React.createElement(\"option\", {\n      value: \"Baseball\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Baseball\"), React.createElement(\"option\", {\n      value: \"Ice Hockey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Ice Hockey\"), React.createElement(\"option\", {\n      value: \"e_num\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Sort by:\"), React.createElement(\"option\", {\n      value: \"event_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Events number\"), React.createElement(\"option\", {\n      value: \"team_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Teams number\")))) : null, this.state.groupsAvailable.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.add === 0 && this.props.currentUser !== null ? React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n      },\n      onClick: this.createGroup,\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Create new Group\") : null, this.state.groupsAvailable.map(group => React.createElement(GroupCard, {\n      key: group.id,\n      group: group.attributes,\n      add: this.props.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Sorry, there are no groups created for this type of sport yet.\"), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"It's a great opportunity to be the first: \"), React.createElement(NavLink, {\n      to: \"/dashboard\",\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Go back to dashboard...\")));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.currentTeam,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp)(GroupsContainer);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js"],"names":["React","Fragment","Redirect","NavLink","connect","GroupCard","GroupsContainer","Component","state","groupsAvailable","unfilteredAvailable","created","handleChange","event","target","value","setState","filter","group","attributes","location","activity","name","sort","a","b","events","length","teams","createGroup","componentDidMount","fetch","then","res","json","groups","props","add","data","console","log","filteredGroup","id","myTeam","activity_id","find","currGroup","componentDidUpdate","prevProps","render","right","marginTop","marginBottom","width","textAlignLast","currentUser","map","msp","userReducer","teamReducer","currentTeam","sportId","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport GroupCard from './GroupCard';\n\nclass GroupsContainer extends React.Component{\n    state= {\n        groupsAvailable: [],\n        unfilteredAvailable: [],\n        created: false\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/api/v1/groups\")\n        .then(res => res.json())\n        .then(groups => {\n\n            if(this.props.add === 0){\n                this.setState({\n                    groupsAvailable: groups.groups.data,\n                    unfilteredAvailable: groups.groups.data\n                })\n            }else{\n                console.log(this.props, groups.groups.data)\n                let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id && !this.props.myTeam.attributes.groups.find(currGroup => currGroup.id === group.attributes.id))\n                this.setState({\n                    groupsAvailable: filteredGroup\n                })\n            }\n        })\n    }\n\n    handleChange = (event) => {\n        switch (event.target.value) {\n            case 'New York, NY':\n            case 'Los Angeles, CA':\n            case 'Miami, FL':\n                this.setState({\n                    groupsAvailable: this.state.unfilteredAvailable.filter(group => group.attributes.location === event.target.value)\n                })\n                break;\n            case 'Soccer':\n            case 'Volleyball':\n            case 'Basketball':\n            case 'Football':\n            case 'Baseball':\n            case 'Ice Hockey':\n                this.setState({\n                    groupsAvailable: this.state.unfilteredAvailable.filter(group => group.attributes.activity.name === event.target.value)\n                })\n                break;\n            case 'event_number':\n                this.setState({\n                    groupsAvailable: this.state.unfilteredAvailable.sort((a, b) => b.attributes.events.length - a.attributes.events.length )\n                })\n                break;\n            case 'team_number':\n                this.setState({\n                    groupsAvailable: this.state.unfilteredAvailable.sort((a, b) => b.attributes.teams.length - a.attributes.teams.length )\n                })\n                break;\n            default:\n                this.setState({\n                    groupsAvailable: this.state.unfilteredAvailable\n                })\n                break;\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.myTeam !== this.props.myTeam){\n            fetch(\"http://localhost:3000/api/v1/groups\")\n            .then(res => res.json())\n            .then(groups => {\n\n                if(this.props.add === 0){\n                    this.setState({\n                        groupsAvailable: groups.groups.data,\n                        unfilteredAvailable: groups.groups.data\n                    })\n                }else{\n                    console.log(groups.groups.data)\n                    let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.attributes.activity_id)\n                    this.setState({groupsAvailable: filteredGroup})\n                }\n            })\n        }\n    }\n\n    createGroup = () => {\n        this.setState({\n            created: true\n        })\n    }\n\n    render(){\n        if(this.state.created){\n            this.setState({\n                created: false\n            })\n            return <Redirect to=\"/create_group\" />\n        }\n        return (\n        <div className=\"search-main\">\n            {\n            this.props.add === 0 ?\n            <form onChange={this.handleChange} className='form'>\n                <p className='field' style={{right: \"0\" ,marginTop: \"-20px\", marginBottom: \"0px\", width: \"100%\"}}>\n                    <select className='select' style={{textAlignLast: \"center\"}} defaultValue='' name=\"location\" id='select'>\n                    <option value=''>Sort or filter by:</option>\n                    <option value='location' disabled>Filter by location:</option>\n                    <option value='New York, NY'>New York, NY</option>\n                    <option value='Los Angeles, CA'>Los Angeles, CA</option>\n                    <option value='Miami, FL'>Miami, FL</option>\n                    <option value='sport' disabled>Filter by sport:</option>\n                    <option value='Soccer'>Soccer</option>\n                    <option value='Football'>Football</option>\n                    <option value='Basketball'>Basketball</option>\n                    <option value='Volleyball'>Volleyball</option>\n                    <option value='Baseball'>Baseball</option>\n                    <option value='Ice Hockey'>Ice Hockey</option>\n                    <option value='e_num' disabled>Sort by:</option>\n                    <option value='event_number' >Events number</option>\n                    <option value='team_number' >Teams number</option>\n                    {/* {this.props.currentUser.user.data.attributes.activities.sort((a, b) => a.id - b.id).map(sport => <option key={sport.id} value={sport.id}>{sport.name}</option>)} */}\n                    </select>\n                </p> \n            </form>\n            :\n            null\n            }\n            {this.state.groupsAvailable.length !== 0 ?\n            <Fragment>\n                {this.props.add === 0 && this.props.currentUser !== null ?\n                    <button style={{marginTop: \"50px\", marginBottom: \"50px\"}} onClick={this.createGroup} className='dash_button'>Create new Group</button>\n                    :\n                    null\n                }\n                {this.state.groupsAvailable.map(group => <GroupCard key={group.id} group={group.attributes} add={this.props.add} />)}\n            </Fragment>\n            :\n            <div className=\"dash_main\">\n                <h1 className=\"main_text\" >Sorry, there are no groups created for this type of sport yet.</h1>\n                <h1 className=\"main_text\" >It's a great opportunity to be the first: </h1>\n                <NavLink to=\"/dashboard\" className=\"main_text\">Go back to dashboard...</NavLink>\n            </div>\n            }\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.currentTeam,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(GroupsContainer)"]},"metadata":{},"sourceType":"module"}