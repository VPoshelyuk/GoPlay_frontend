{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamSignUp.js\";\nimport React from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser, setMyTeams } from './redux/actions/user_actions';\n\nclass TeamSignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      logo: \"\",\n      description: \"\",\n      created: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addPic = e => {\n      // console.log(e.target.files)\n      this.setState({\n        logo: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const fD = new FormData();\n      fD.append(\"name\", this.state.name);\n      fD.append(\"location\", this.props.currentUser.user.data.attributes.location);\n      fD.append(\"number_of_members\", 1);\n      fD.append(\"logo\", this.state.logo);\n      fD.append(\"description\", this.state.description);\n      fD.append(\"admin_id\", this.props.currentUser.user.data.id);\n      fD.append(\"activity_id\", this.props.sportId);\n      fD.append(\"won_games\", 0);\n      fD.append(\"lost_games\", 0);\n      fD.append(\"tie_games\", 0);\n      fetch(\"http://localhost:3000/api/v1/teams\", {\n        method: \"POST\",\n        body: fD\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n        fetch(\"http://localhost:3000/api/v1/user_teams\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: this.props.currentUser.user.data.id,\n            team_id: response.team.data.id,\n            signup_won_games: response.team.data.attributes.won_games,\n            signup_tie_games: response.team.data.attributes.tie_games,\n            signup_lost_games: response.team.data.attributes.lost_games\n          })\n        }).then(res => res.json()).then(response => {\n          setTimeout(() => {\n            fetch(\"http://localhost:3000/api/v1/auto_login\", {\n              headers: {\n                \"authorization\": localStorage.token\n              }\n            }).then(res => res.json()).then(user => {\n              if (user.errors) {\n                alert(user.errors);\n              } else {\n                this.props.setUser(user);\n                localStorage.token = user.token;\n                this.setState({\n                  name: \"\",\n                  logo_path: \"\",\n                  description: \"\",\n                  created: true\n                });\n                fetch(\"http://localhost:3000/api/v1/my_teams\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    user_id: this.props.currentUser.user.data.id\n                  })\n                }).then(res => res.json()).then(teams => {\n                  this.props.setMyTeams(teams.teams.data);\n                }).catch(() => this.props.setMyTeams(undefined));\n              }\n            });\n          }, 1000);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.state.created) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label required\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field required half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"logo_path\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"input\", {\n      className: \"text-input\",\n      id: \"logo_path\",\n      name: \"logo_path\",\n      onChange: this.addPic,\n      accept: \"image/*\",\n      required: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      cols: \"50\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Create a team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))), React.createElement(NavLink, {\n      to: \"/dashboard\",\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Go back to dashboard...\"));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  setUser,\n  setMyTeams\n})(TeamSignUp);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamSignUp.js"],"names":["React","Redirect","NavLink","connect","setUser","setMyTeams","TeamSignUp","Component","state","name","logo","description","created","handleChange","event","setState","target","value","addPic","e","files","handleSubmit","preventDefault","fD","FormData","append","props","currentUser","user","data","attributes","location","id","sportId","fetch","method","body","then","res","json","response","console","log","headers","JSON","stringify","user_id","team_id","team","signup_won_games","won_games","signup_tie_games","tie_games","signup_lost_games","lost_games","setTimeout","localStorage","token","errors","alert","logo_path","teams","catch","undefined","componentDidMount","render","msp","userReducer","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser, setMyTeams } from './redux/actions/user_actions'\n\nclass TeamSignUp extends React.Component{\n    state = {\n        name: \"\",\n        logo: \"\",\n        description: \"\",\n        created: false\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    addPic = (e) => {\n        // console.log(e.target.files)\n        this.setState({\n            logo: e.target.files[0],\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const fD = new FormData()\n        fD.append(\"name\", this.state.name)\n        fD.append(\"location\", this.props.currentUser.user.data.attributes.location)\n        fD.append(\"number_of_members\", 1)\n        fD.append(\"logo\", this.state.logo)\n        fD.append(\"description\", this.state.description)\n        fD.append(\"admin_id\", this.props.currentUser.user.data.id)\n        fD.append(\"activity_id\", this.props.sportId)\n        fD.append(\"won_games\", 0)\n        fD.append(\"lost_games\", 0)\n        fD.append(\"tie_games\", 0)\n            fetch(\"http://localhost:3000/api/v1/teams\", {\n            method: \"POST\",\n            body: fD\n            })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                fetch(\"http://localhost:3000/api/v1/user_teams\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: this.props.currentUser.user.data.id,\n                    team_id: response.team.data.id,\n                    signup_won_games: response.team.data.attributes.won_games,\n                    signup_tie_games: response.team.data.attributes.tie_games,\n                    signup_lost_games: response.team.data.attributes.lost_games\n                })\n                })\n                .then(res => res.json())\n                .then(response => {\n                    setTimeout(() => {\n                        fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                            headers: {\n                            \"authorization\": localStorage.token\n                            }\n                        })\n                        .then(res => res.json())\n                        .then(user =>{\n                            if (user.errors){\n                            alert(user.errors)\n                            } else {\n                            this.props.setUser(user)\n                            localStorage.token = user.token\n                            this.setState({\n                                name: \"\",\n                                logo_path: \"\",\n                                description: \"\",\n                                created: true\n                            })\n                            fetch(\"http://localhost:3000/api/v1/my_teams\", {\n                            method: \"POST\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"Accept\": \"application/json\"\n                            },\n                            body: JSON.stringify({\n                                user_id: this.props.currentUser.user.data.id\n                            })\n                        })\n                        .then(res => res.json())\n                        .then(teams => {this.props.setMyTeams(teams.teams.data)})\n                        .catch(() => this.props.setMyTeams(undefined))\n                            }\n                        })\n                    }, 1000)\n                })\n            })\n    }\n\n    componentDidMount(){\n    }\n      \n    \n\n    render(){\n        if(this.state.created) return <Redirect to=\"/dashboard\" />\n        return (\n        <div className=\"dash_main\">\n            <form onSubmit={this.handleSubmit} className='form'>\n            <p className='field required half'>\n                <label className='label required' htmlFor='name'>Name</label>\n                <input className='text-input' id='name' name='name' value={this.state.name} onChange={this.handleChange} required type='text'/>\n            </p>\n            <p className='field required half'>\n                <label className='label' htmlFor='logo_path'>Logo</label>\n                <input className='text-input' id='logo_path' name='logo_path' onChange={this.addPic} accept=\"image/*\" required type='file' />\n            </p>\n            <p className='field'>\n                <label className='label' htmlFor='description'>Description</label>\n                <textarea className='textarea' cols='50' id='description' name='description' value={this.state.description} onChange={this.handleChange} rows='4'></textarea>\n            </p>\n            <p className='field'>\n                <input className='button' type='submit' value='Create a team' />\n            </p>\n            </form>\n            <NavLink to=\"/dashboard\" className=\"main_text\">Go back to dashboard...</NavLink>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { setUser, setMyTeams })(TeamSignUp)"]},"metadata":{},"sourceType":"module"}