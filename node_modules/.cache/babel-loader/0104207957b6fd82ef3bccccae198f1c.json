{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GroupCard from './GroupCard';\n\nclass GroupsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      groupsAvailable: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    fetch(\"http://localhost:3000/api/v1/groups\").then(res => res.json()).then(groups => {\n      if (this.props.add === 0) {\n        this.setState({\n          groupsAvailable: groups.groups.data\n        });\n      } else {\n        console.log(groups.groups.data);\n        let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.activity_id);\n        console.log(filteredGroup);\n        this.setState({\n          groupsAvailable: filteredGroup\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sportId !== this.props.sportId) {\n      fetch(\"http://localhost:3000/api/v1/groups\").then(res => res.json()).then(groups => {\n        if (this.props.add === 0) {\n          this.setState({\n            groupsAvailable: groups.groups.data\n          });\n        } else {\n          console.log(groups.groups.data);\n          let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.activity_id);\n          console.log(filteredGroup);\n          this.setState({\n            groupsAvailable: filteredGroup\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.groupsAvailable.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.add === 0 && this.props.currentUser !== null ? React.createElement(\"button\", {\n      style: {\n        margin: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Create new Group\") : null, this.state.groupsAvailable.map(group => React.createElement(GroupCard, {\n      key: group.id,\n      group: group.attributes,\n      add: this.props.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"dash_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Sorry, there are no groups created for this type of sport yet.\"), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"It's a great opportunity to be the first: \"), React.createElement(NavLink, {\n      to: \"/dashboard\",\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Go back to dashboard...\")));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.myTeam,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp)(GroupsContainer);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/GroupsContainer.js"],"names":["React","Fragment","Redirect","NavLink","connect","GroupCard","GroupsContainer","Component","state","groupsAvailable","componentDidMount","console","log","props","fetch","then","res","json","groups","add","setState","data","filteredGroup","filter","group","attributes","activity","id","myTeam","activity_id","componentDidUpdate","prevProps","sportId","render","length","currentUser","margin","map","msp","userReducer","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport GroupCard from './GroupCard';\n\nclass GroupsContainer extends React.Component{\n    state= {\n        groupsAvailable: []\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n        fetch(\"http://localhost:3000/api/v1/groups\")\n        .then(res => res.json())\n        .then(groups => {\n\n            if(this.props.add === 0){\n                this.setState({groupsAvailable: groups.groups.data})\n            }else{\n                console.log(groups.groups.data)\n                let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.activity_id)\n                console.log(filteredGroup)\n                this.setState({groupsAvailable: filteredGroup})\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.sportId !== this.props.sportId){\n            fetch(\"http://localhost:3000/api/v1/groups\")\n            .then(res => res.json())\n            .then(groups => {\n\n                if(this.props.add === 0){\n                    this.setState({groupsAvailable: groups.groups.data})\n                }else{\n                    console.log(groups.groups.data)\n                    let filteredGroup = groups.groups.data.filter(group => group.attributes.activity.id === this.props.myTeam.activity_id)\n                    console.log(filteredGroup)\n                    this.setState({groupsAvailable: filteredGroup})\n                }\n            })\n        }\n    }\n\n    render(){\n        return (\n        <div className=\"search-main\">\n            {this.state.groupsAvailable.length !== 0 ?\n            <Fragment>\n                {this.props.add === 0 && this.props.currentUser !== null ?\n                    <button style={{margin: \"50px\"}} className='dash_button'>Create new Group</button>\n                    :\n                    null\n                }\n                {this.state.groupsAvailable.map(group => <GroupCard key={group.id} group={group.attributes} add={this.props.add} />)}\n            </Fragment>\n            :\n            <div className=\"dash_main\">\n                <h1 className=\"main_text\" >Sorry, there are no groups created for this type of sport yet.</h1>\n                <h1 className=\"main_text\" >It's a great opportunity to be the first: </h1>\n                <NavLink to=\"/dashboard\" className=\"main_text\">Go back to dashboard...</NavLink>\n            </div>\n            }\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.myTeam,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(GroupsContainer)"]},"metadata":{},"sourceType":"module"}