{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass EventCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: undefined,\n      user_event: undefined,\n      added: false,\n      viewed: false\n    };\n\n    this.handleParticipateInEvent = () => {\n      fetch(\"http://localhost:3000/api/v1/team_events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          team_id: this.props.myTeam.id\n        })\n      }).then(res => res.json()).then(() => {\n        this.setState({\n          added: true\n        });\n      });\n    };\n\n    this.setAttendance = e => {\n      fetch(`http://localhost:3000/api/v1/user_events/${this.state.user_event}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          user_id: this.props.currentUser.user.data.attributes.id,\n          status: e.target.value\n        })\n      }).then(res => res.json()).then(console.log);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.status_check === 1 && this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id)) {\n      fetch(\"http://localhost:3000/api/v1/status_check\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          user_id: this.props.currentUser.user.data.attributes.id\n        })\n      }).then(res => res.json()).then(resp => this.setState({\n        status: resp.status,\n        user_event: resp.id\n      }, () => {\n        const selector = document.querySelectorAll(`.${this.props.event.id}-${this.props.event.name}`);\n        console.log(selector);\n\n        switch (resp.status) {\n          case 'Going':\n            selector[0].checked = true;\n            break;\n\n          case 'Maybe':\n            selector[1].checked = true;\n            break;\n\n          case 'Nope':\n            selector[2].checked = true;\n            break;\n\n          default:\n            console.log(\"yo\");\n            break;\n        }\n\n        selector.value = resp.status;\n        console.log(selector.value);\n      }));\n    } else {\n      this.setState({\n        status: null\n      });\n    }\n  } // handleViewEvent = () => {\n  //     // this.props.setevent(this.props.event)\n  //     this.setState({\n  //         viewed: true\n  //     })\n  // }\n\n\n  render() {\n    console.log(this.props, this.state);\n    if (this.state.added && this.props.myGroup) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }); // if(this.state.viewed){\n    //     this.setState({\n    //         viewed: false\n    //     })\n    //     return <Redirect to={`/event/${this.props.event.id}`} />\n    // }\n    // debugger\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.dash_style ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      style: {\n        backgroundImage: `url(${this.props.event.pic_path})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"figcaption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.event.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.event.price === 0 ? \"Free\" : this.props.event.price)))) : React.createElement(\"div\", {\n      className: this.props.myTeam !== undefined && this.props.myTeam !== null ? \"irregular_event_card\" : \"regular_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group_logo_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"group_logo\",\n      src: this.props.event.pic_path,\n      alt: \"event_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"group_location\",\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.props.event.price === 0 ? \"Free\" : this.props.event.price), React.createElement(\"p\", {\n      className: \"event_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Players per team: \", this.props.event.players_per_team), React.createElement(\"p\", {\n      className: \"event_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Number of teams: \", this.props.event.max_number_of_teams), React.createElement(\"p\", {\n      className: \"team_locatevent_locationion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.props.event.pretty_time)), React.createElement(\"div\", {\n      className: \"group_info_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.event.name), React.createElement(\"h2\", {\n      className: \"group_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.event.description), this.props.myTeam !== undefined && this.props.myTeam !== null ? this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined ? React.createElement(\"button\", {\n      onClick: this.handleParticipateInEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Count my team in!\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onChange: this.setAttendance,\n      name: \"radio\",\n      className: \"radio-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-one\",\n      value: \"Going\",\n      name: \"selector\",\n      className: `${this.props.event.id}-${this.props.event.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"option-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"I'm Going!\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-two\",\n      value: \"Maybe\",\n      name: \"selector\",\n      className: `${this.props.event.id}-${this.props.event.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"option-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Maybe\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-three\",\n      value: \"Nope\",\n      name: \"selector\",\n      className: `${this.props.event.id}-${this.props.event.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"option-three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Nope\")), React.createElement(\"button\", {\n      onClick: this.handleUnparticipateInEvent,\n      style: {\n        marginTop: \"30px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Sorry, my team can't make it\")) : this.state.added ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onChange: this.setAttendance,\n      name: \"radio\",\n      className: \"radio-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-one\",\n      name: \"selector\",\n      className: `${this.props.event.id}-${this.props.event.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"option-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"I'm Going!\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-two\",\n      name: \"selector\",\n      className: `${this.props.event.id}-${this.props.event.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"option-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Maybe\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"option-three\",\n      name: \"selector\",\n      className: `${this.props.event.id}-${this.props.event.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"option-three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Nope\")), React.createElement(\"button\", {\n      onClick: this.handleUnparticipateInEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Sorry, my team can't make it\")) : null))) // <div className=\"regular_event_card\">\n    // <h1 className=\"event_name\">{this.props.event.name}</h1>\n    // <p className=\"event_location\">{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n    // <img className=\"team_logo\" src={this.props.event.pic_path} alt=\"event_pic\" />\n    // <h2 className=\"event_desc\">{this.props.event.description}</h2>\n    //     <p className=\"event_location\">Players per team: {this.props.event.players_per_team}</p>\n    //     <p className=\"event_location\">Number of teams: {this.props.event.max_number_of_teams}</p>\n    //     <p className=\"team_locatevent_locationion\">{this.props.event.pretty_time}</p>\n    //     {this.props.myTeam !== undefined && this.props.myTeam !== null?\n    //         this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n    //             <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count my team in!</button>\n    //             :\n    //             this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) && this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n    //                 <Fragment>\n    //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n    //                         <input type=\"radio\" id=\"option-one\" value=\"Going\" name=\"selector\" />\n    //                         <label htmlFor=\"option-one\">I'm Going!</label>\n    //                         <input type=\"radio\" id=\"option-two\" value=\"Maybe\" name=\"selector\" />\n    //                         <label htmlFor=\"option-two\">Maybe</label>\n    //                         <input type=\"radio\" id=\"option-three\" value=\"Nope\" name=\"selector\" />\n    //                         <label htmlFor=\"option-three\">Nope</label>\n    //                     </div>\n    //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n    //                 </Fragment>\n    //                 :\n    //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n    //         :\n    //         this.state.added ?\n    //             this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n    //                 <Fragment>\n    //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n    //                         <input type=\"radio\" id=\"option-one\" name=\"selector\" />\n    //                         <label htmlFor=\"option-one\">I'm Going!</label>\n    //                         <input type=\"radio\" id=\"option-two\" name=\"selector\" />\n    //                         <label htmlFor=\"option-two\">Maybe</label>\n    //                         <input type=\"radio\" id=\"option-three\" name=\"selector\" />\n    //                         <label htmlFor=\"option-three\">Nope</label>\n    //                     </div>\n    //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n    //                 </Fragment>\n    //                 :\n    //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n    //             :\n    //             null\n    //     }\n    // </div>\n    ;\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.currentTeam,\n    myGroup: state.teamReducer.currentGroup // sportId: state.teamReducer.currentSportId\n\n  };\n}\n\nexport default connect(msp)(EventCard);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js"],"names":["React","Fragment","Redirect","connect","EventCard","Component","state","status","undefined","user_event","added","viewed","handleParticipateInEvent","fetch","method","headers","body","JSON","stringify","event_id","props","event","id","team_id","myTeam","then","res","json","setState","setAttendance","e","user_id","currentUser","user","data","attributes","target","value","console","log","componentDidMount","status_check","events","find","resp","selector","document","querySelectorAll","name","checked","render","myGroup","dash_style","backgroundImage","pic_path","price","fontSize","players_per_team","max_number_of_teams","pretty_time","description","marginTop","handleUnparticipateInEvent","msp","userReducer","teamReducer","currentTeam","currentGroup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE5B;AACHC,MAAAA,MAAM,EAAEC,SADL;AAEHC,MAAAA,UAAU,EAAED,SAFT;AAGHE,MAAAA,KAAK,EAAE,KAHJ;AAIHC,MAAAA,MAAM,EAAE;AAJL,KAF4B;;AAAA,SASnCC,wBATmC,GASR,MAAM;AAC7BC,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFqC;AAM9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EADV;AAEjBC,UAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,MAAX,CAAkBF;AAFV,SAAf;AANwC,OAA7C,CAAL,CAWCG,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYM,MAAK;AAEP,aAAKG,QAAL,CAAc;AACVlB,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH,OAjBD;AAmBH,KA7BkC;;AAAA,SA+BnCmB,aA/BmC,GA+BnBC,CAAC,IAAI;AACjBjB,MAAAA,KAAK,CAAE,4CAA2C,KAAKP,KAAL,CAAWG,UAAW,EAAnE,EAAsE;AACvEK,QAAAA,MAAM,EAAE,OAD+D;AAEvEC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAF8D;AAMvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EADV;AAEjBS,UAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,UAAjC,CAA4Cb,EAFpC;AAGjBf,UAAAA,MAAM,EAAEuB,CAAC,CAACM,MAAF,CAASC;AAHA,SAAf;AANiE,OAAtE,CAAL,CAYCZ,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMa,OAAO,CAACC,GAbd;AAcH,KA9CkC;AAAA;;AAgDnCC,EAAAA,iBAAiB,GAAE;AACf,QAAG,KAAKpB,KAAL,CAAWqB,YAAX,KAA4B,CAA5B,IAAiC,KAAKrB,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6BO,MAA7B,CAAoCC,IAApC,CAAyCtB,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,EAAhF,CAApC,EAAwH;AACpHT,MAAAA,KAAK,CAAC,2CAAD,EAA8C;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAF0C;AAMnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EADV;AAEjBS,UAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiCC,UAAjC,CAA4Cb;AAFpC,SAAf;AAN6C,OAA9C,CAAL,CAWCG,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYOmB,IAAD,IACF,KAAKhB,QAAL,CAAc;AACVrB,QAAAA,MAAM,EAAEqC,IAAI,CAACrC,MADH;AAEVE,QAAAA,UAAU,EAAEmC,IAAI,CAACtB;AAFP,OAAd,EAGE,MAAI;AACF,cAAMuB,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA2B,IAAG,KAAK3B,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAA3E,CAAjB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AACA,gBAAQD,IAAI,CAACrC,MAAb;AACI,eAAK,OAAL;AACIsC,YAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYI,OAAZ,GAAsB,IAAtB;AACA;;AACJ,eAAK,OAAL;AACIJ,YAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYI,OAAZ,GAAsB,IAAtB;AACA;;AACJ,eAAK,MAAL;AACIJ,YAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYI,OAAZ,GAAsB,IAAtB;AACA;;AACJ;AACIX,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA;AAZR;;AAcAM,QAAAA,QAAQ,CAACR,KAAT,GAAiBO,IAAI,CAACrC,MAAtB;AACA+B,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACR,KAArB;AACH,OAtBD,CAbJ;AAqCH,KAtCD,MAsCK;AACD,WAAKT,QAAL,CAAc;AACVrB,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH;AACJ,GA5FkC,CA8FnC;AACA;AACA;AACA;AACA;AACA;;;AAEA2C,EAAAA,MAAM,GAAE;AACJZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB,EAAwB,KAAKd,KAA7B;AACA,QAAG,KAAKA,KAAL,CAAWI,KAAX,IAAoB,KAAKU,KAAL,CAAW+B,OAAlC,EAA0C,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CAFtC,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAK/B,KAAL,CAAWgC,UAAX,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAG,OAAM,KAAKjC,KAAL,CAAWC,KAAX,CAAiBiC,QAAS;AAAnD,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKlC,KAAL,CAAWC,KAAX,CAAiB2B,IAAxB,CAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK5B,KAAL,CAAWC,KAAX,CAAiBkC,KAAjB,KAA2B,CAA3B,GAA+B,MAA/B,GAAwC,KAAKnC,KAAL,CAAWC,KAAX,CAAiBkC,KAA7D,CAFJ,CADJ,CADJ,CADA,GAUA;AAAK,MAAA,SAAS,EAAE,KAAKnC,KAAL,CAAWI,MAAX,KAAsBhB,SAAtB,IAAmC,KAAKY,KAAL,CAAWI,MAAX,KAAsB,IAAzD,GAAgE,sBAAhE,GAAyF,cAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,KAAX,CAAiBiC,QAAlD;AAA4D,MAAA,GAAG,EAAC,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,KAAK,EAAE;AAACE,QAAAA,QAAQ,EAAE;AAAX,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0D,KAAKpC,KAAL,CAAWC,KAAX,CAAiBkC,KAAjB,KAA2B,CAA3B,GAA+B,MAA/B,GAAwC,KAAKnC,KAAL,CAAWC,KAAX,CAAiBkC,KAAnH,CAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAiD,KAAKnC,KAAL,CAAWC,KAAX,CAAiBoC,gBAAlE,CAHJ,EAII;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAgD,KAAKrC,KAAL,CAAWC,KAAX,CAAiBqC,mBAAjE,CAJJ,EAKI;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,KAAKtC,KAAL,CAAWC,KAAX,CAAiBsC,WAA7D,CALJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKvC,KAAL,CAAWC,KAAX,CAAiB2B,IAA7C,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAK5B,KAAL,CAAWC,KAAX,CAAiBuC,WAA7C,CAFJ,EAGK,KAAKxC,KAAL,CAAWI,MAAX,KAAsBhB,SAAtB,IAAmC,KAAKY,KAAL,CAAWI,MAAX,KAAsB,IAAzD,GACG,KAAKJ,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6BO,MAA7B,KAAwClC,SAAxC,IAAqD,KAAKY,KAAL,CAAWI,MAAX,CAAkBW,UAAlB,CAA6BO,MAA7B,CAAoCC,IAApC,CAAyCtB,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,EAAhF,MAAwFd,SAA7I,GACI;AAAQ,MAAA,OAAO,EAAE,KAAKI,wBAAtB;AAAgD,MAAA,KAAK,EAAE;AAACiD,QAAAA,SAAS,EAAE;AAAZ,OAAvD;AAA4E,MAAA,SAAS,EAAC,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,GAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,QAAQ,EAAE,KAAKhC,aAApB;AAAmC,MAAA,IAAI,EAAC,OAAxC;AAAgD,MAAA,SAAS,EAAC,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,KAAK,EAAC,OAA1C;AAAkD,MAAA,IAAI,EAAC,UAAvD;AAAkE,MAAA,SAAS,EAAG,GAAE,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,KAAK,EAAC,OAA1C;AAAkD,MAAA,IAAI,EAAC,UAAvD;AAAkE,MAAA,SAAS,EAAG,GAAE,KAAK5B,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,cAAvB;AAAsC,MAAA,KAAK,EAAC,MAA5C;AAAmD,MAAA,IAAI,EAAC,UAAxD;AAAmE,MAAA,SAAS,EAAG,GAAE,KAAK5B,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAKc,0BAAtB;AAAkD,MAAA,KAAK,EAAE;AAACD,QAAAA,SAAS,EAAE;AAAZ,OAAzD;AAA8E,MAAA,SAAS,EAAC,aAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCATJ,CAJP,GAgBG,KAAKvD,KAAL,CAAWI,KAAX,GACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,QAAQ,EAAE,KAAKmB,aAApB;AAAmC,MAAA,IAAI,EAAC,OAAxC;AAAgD,MAAA,SAAS,EAAC,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAoD,MAAA,SAAS,EAAG,GAAE,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAoD,MAAA,SAAS,EAAG,GAAE,KAAK5B,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,cAAvB;AAAsC,MAAA,IAAI,EAAC,UAA3C;AAAsD,MAAA,SAAS,EAAG,GAAE,KAAK5B,KAAL,CAAWC,KAAX,CAAiBC,EAAG,IAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,IAAK,EAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAKc,0BAAtB;AAAkD,MAAA,KAAK,EAAE;AAACD,QAAAA,SAAS,EAAE;AAAZ,OAAzD;AAA8E,MAAA,SAAS,EAAC,aAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCATJ,CADJ,GAaI,IAhCZ,CARJ,CAZR,CADA,CA6DA;AACI;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA3GA;AA6GH;;AA5NkC;;AA+NvC,SAASE,GAAT,CAAazD,KAAb,EAAmB;AACf,SAAO;AACH0B,IAAAA,WAAW,EAAE1B,KAAK,CAAC0D,WAAN,CAAkBhC,WAD5B;AAEHR,IAAAA,MAAM,EAAElB,KAAK,CAAC2D,WAAN,CAAkBC,WAFvB;AAGHf,IAAAA,OAAO,EAAE7C,KAAK,CAAC2D,WAAN,CAAkBE,YAHxB,CAIH;;AAJG,GAAP;AAMH;;AAED,eAAehE,OAAO,CAAC4D,GAAD,CAAP,CAAa3D,SAAb,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass EventCard extends React.Component{\n\n    state= {\n        status: undefined,\n        user_event: undefined,\n        added: false,\n        viewed: false\n    }\n\n    handleParticipateInEvent = () => {\n        fetch(\"http://localhost:3000/api/v1/team_events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                team_id: this.props.myTeam.id\n            })\n            })\n        .then(res => res.json())\n        .then(() =>{\n\n            this.setState({\n                added: true\n            })\n        }\n        )\n    }\n\n    setAttendance = e => {\n        fetch(`http://localhost:3000/api/v1/user_events/${this.state.user_event}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                user_id: this.props.currentUser.user.data.attributes.id,\n                status: e.target.value\n            })\n        })\n        .then(res => res.json())\n        .then(console.log)\n    }\n\n    componentDidMount(){\n        if(this.props.status_check === 1 && this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id)){\n            fetch(\"http://localhost:3000/api/v1/status_check\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                user_id: this.props.currentUser.user.data.attributes.id\n            })\n            })\n            .then(res => res.json())\n            .then((resp) =>\n                this.setState({\n                    status: resp.status,\n                    user_event: resp.id\n                },()=>{\n                    const selector = document.querySelectorAll(`.${this.props.event.id}-${this.props.event.name}`)\n                    console.log(selector)\n                    switch (resp.status) {\n                        case 'Going':\n                            selector[0].checked = true\n                            break;\n                        case 'Maybe':\n                            selector[1].checked = true\n                            break;\n                        case 'Nope':\n                            selector[2].checked = true\n                            break;\n                        default:\n                            console.log(\"yo\")\n                            break;\n                    }\n                    selector.value = resp.status\n                    console.log(selector.value)\n                })\n            )\n        }else{\n            this.setState({\n                status: null\n            })\n        }\n    }\n\n    // handleViewEvent = () => {\n    //     // this.props.setevent(this.props.event)\n    //     this.setState({\n    //         viewed: true\n    //     })\n    // }\n\n    render(){\n        console.log(this.props, this.state)\n        if(this.state.added && this.props.myGroup)return <Redirect to=\"/dashboard\" />\n        // if(this.state.viewed){\n        //     this.setState({\n        //         viewed: false\n        //     })\n        //     return <Redirect to={`/event/${this.props.event.id}`} />\n        // }\n        // debugger\n        return (\n        <Fragment>\n            {\n                this.props.dash_style?\n                <div>\n                    <figure style={{backgroundImage: `url(${this.props.event.pic_path})`}}>\n                        <figcaption>\n                            <h4> <span>{this.props.event.name}</span></h4>\n                            <p>{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n                        </figcaption>\n                    </figure>\n                </div>\n                :\n                <div className={this.props.myTeam !== undefined && this.props.myTeam !== null ? \"irregular_event_card\" : \"regular_card\"}>\n                    <div className=\"group_logo_div\">\n                        <img className=\"group_logo\" src={this.props.event.pic_path} alt=\"event_logo\" />\n                        <p className=\"group_location\" style={{fontSize: \"40px\"}}>{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n                        <p className=\"event_location\">Players per team: {this.props.event.players_per_team}</p>\n                        <p className=\"event_location\">Number of teams: {this.props.event.max_number_of_teams}</p>\n                        <p className=\"team_locatevent_locationion\">{this.props.event.pretty_time}</p>\n                    </div>\n                    <div className=\"group_info_div\">\n                        <h1 className=\"group_name\">{this.props.event.name}</h1>\n                        <h2 className=\"group_desc\">{this.props.event.description}</h2>\n                        {this.props.myTeam !== undefined && this.props.myTeam !== null?\n                            this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n                                <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count my team in!</button>\n                                :\n                                <Fragment>\n                                    <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n                                        <input type=\"radio\" id=\"option-one\" value=\"Going\" name=\"selector\" className={`${this.props.event.id}-${this.props.event.name}`}/>\n                                        <label htmlFor=\"option-one\">I'm Going!</label>\n                                        <input type=\"radio\" id=\"option-two\" value=\"Maybe\" name=\"selector\" className={`${this.props.event.id}-${this.props.event.name}`}/>\n                                        <label htmlFor=\"option-two\">Maybe</label>\n                                        <input type=\"radio\" id=\"option-three\" value=\"Nope\" name=\"selector\" className={`${this.props.event.id}-${this.props.event.name}`}/>\n                                        <label htmlFor=\"option-three\">Nope</label>\n                                    </div>\n                                    <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"30px\"}} className='dash_button'>Sorry, my team can't make it</button>\n                                </Fragment>\n                            :\n                            this.state.added ?\n                                <Fragment>\n                                    <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n                                        <input type=\"radio\" id=\"option-one\" name=\"selector\" className={`${this.props.event.id}-${this.props.event.name}`}/>\n                                        <label htmlFor=\"option-one\">I'm Going!</label>\n                                        <input type=\"radio\" id=\"option-two\" name=\"selector\" className={`${this.props.event.id}-${this.props.event.name}`}/>\n                                        <label htmlFor=\"option-two\">Maybe</label>\n                                        <input type=\"radio\" id=\"option-three\" name=\"selector\" className={`${this.props.event.id}-${this.props.event.name}`}/>\n                                        <label htmlFor=\"option-three\">Nope</label>\n                                    </div>\n                                    <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n                                </Fragment>\n                                :\n                                null\n\n                        }\n                    </div>\n\n                </div>\n            }\n        </Fragment>\n        // <div className=\"regular_event_card\">\n            // <h1 className=\"event_name\">{this.props.event.name}</h1>\n            // <p className=\"event_location\">{this.props.event.price === 0 ? \"Free\" : this.props.event.price}</p>\n            // <img className=\"team_logo\" src={this.props.event.pic_path} alt=\"event_pic\" />\n            // <h2 className=\"event_desc\">{this.props.event.description}</h2>\n        //     <p className=\"event_location\">Players per team: {this.props.event.players_per_team}</p>\n        //     <p className=\"event_location\">Number of teams: {this.props.event.max_number_of_teams}</p>\n        //     <p className=\"team_locatevent_locationion\">{this.props.event.pretty_time}</p>\n        //     {this.props.myTeam !== undefined && this.props.myTeam !== null?\n        //         this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n        //             <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count my team in!</button>\n        //             :\n        //             this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) && this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n        //                 <Fragment>\n        //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n        //                         <input type=\"radio\" id=\"option-one\" value=\"Going\" name=\"selector\" />\n        //                         <label htmlFor=\"option-one\">I'm Going!</label>\n        //                         <input type=\"radio\" id=\"option-two\" value=\"Maybe\" name=\"selector\" />\n        //                         <label htmlFor=\"option-two\">Maybe</label>\n        //                         <input type=\"radio\" id=\"option-three\" value=\"Nope\" name=\"selector\" />\n        //                         <label htmlFor=\"option-three\">Nope</label>\n        //                     </div>\n        //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n        //                 </Fragment>\n        //                 :\n        //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n        //         :\n        //         this.state.added ?\n        //             this.props.myTeam.attributes.admin.id === this.props.currentUser.user.data.attributes.id?\n        //                 <Fragment>\n        //                     <div onChange={this.setAttendance} name=\"radio\" className=\"radio-group\">\n        //                         <input type=\"radio\" id=\"option-one\" name=\"selector\" />\n        //                         <label htmlFor=\"option-one\">I'm Going!</label>\n        //                         <input type=\"radio\" id=\"option-two\" name=\"selector\" />\n        //                         <label htmlFor=\"option-two\">Maybe</label>\n        //                         <input type=\"radio\" id=\"option-three\" name=\"selector\" />\n        //                         <label htmlFor=\"option-three\">Nope</label>\n        //                     </div>\n        //                     <button onClick={this.handleUnparticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Sorry, my team can't make it</button>\n        //                 </Fragment>\n        //                 :\n        //                 <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n        //             :\n        //             null\n\n        //     }\n        // </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.currentTeam,\n        myGroup: state.teamReducer.currentGroup\n        // sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(EventCard)"]},"metadata":{},"sourceType":"module"}