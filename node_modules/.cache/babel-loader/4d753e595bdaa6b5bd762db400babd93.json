{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamCard.js\";\nimport React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user_actions';\n\nclass TeamSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      joined: false\n    };\n\n    this.joinTeam = () => {\n      fetch(\"http://localhost:3000/api/v1/user_teams\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.user.data.id,\n          team_id: this.props.team.id,\n          signup_won_games: this.props.team.won_games,\n          signup_tie_games: this.props.team.tie_games,\n          signup_lost_games: this.props.team.lost_games\n        })\n      });\n      this.props.team.events.forEach(event => fetch(\"http://localhost:3000/api/v1/user_events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.user.data.id,\n          event_id: event.id\n        })\n      }));\n      fetch(`http://localhost:3000/api/v1/teams/${this.props.team.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          number_of_members: this.props.team.number_of_members + 1\n        })\n      }).then(setTimeout(() => {\n        fetch(\"http://localhost:3000/api/v1/auto_login\", {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => res.json()).then(user => {\n          if (user.errors) {\n            alert(user.errors);\n          } else {\n            this.props.setUser(user);\n            localStorage.token = user.token;\n            this.setState({\n              joined: true\n            });\n          }\n        });\n      }, 1000));\n    };\n  }\n\n  render() {\n    if (this.state.joined) return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.dash_style ? React.createElement(NavLink, {\n      to: `/dashboard`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      style: {\n        backgroundImage: `url(${this.props.team.logo_path})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"figcaption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.team.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.team.location)))) : null); // <div onClick={this.props.profile_acc? null : this.joinTeam} className=\"regular_card\">\n    //     <h1 className=\"team_name\">{this.props.team.name}</h1>\n    //     <p className=\"team_location\">{this.props.team.location}</p>\n    //     <p className=\"team_mem_num\">{this.props.team.number_of_members}</p>\n    //     <img className=\"team_logo\" src={this.props.team.logo_path} alt=\"team_logo\" />\n    //     <h2 className=\"team_desc\">{this.props.team.description}</h2>\n    //     <div className=\"team_scores\">\n    //         <p className=\"team_score\">{this.props.team.won_games}</p>\n    //         <p className=\"team_score\">{this.props.team.tie_games}</p>\n    //         <p className=\"team_score\">{this.props.team.lost_games}</p>\n    //     </div>\n    // </div>\n    // );\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    sportId: state.teamReducer.currentSportId\n  };\n}\n\nexport default connect(msp, {\n  setUser\n})(TeamSearch);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/TeamCard.js"],"names":["React","Redirect","connect","setUser","TeamSearch","Component","state","joined","joinTeam","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","user","data","id","team_id","team","signup_won_games","won_games","signup_tie_games","tie_games","signup_lost_games","lost_games","events","forEach","event","event_id","number_of_members","then","setTimeout","localStorage","token","res","json","errors","alert","setState","render","dash_style","backgroundImage","logo_path","name","location","msp","userReducer","sportId","teamReducer","currentSportId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser } from './redux/actions/user_actions'\n\nclass TeamSearch extends React.Component{\n    state = {\n        joined: false\n    }\n\n    joinTeam = () => {\n        fetch(\"http://localhost:3000/api/v1/user_teams\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.user.data.id,\n                team_id: this.props.team.id,\n                signup_won_games: this.props.team.won_games,\n                signup_tie_games: this.props.team.tie_games,\n                signup_lost_games: this.props.team.lost_games\n            })\n        })\n        this.props.team.events.forEach(event =>\n            fetch(\"http://localhost:3000/api/v1/user_events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.user.data.id,\n                event_id: event.id\n            })\n            })\n        )\n        fetch(`http://localhost:3000/api/v1/teams/${this.props.team.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                number_of_members: this.props.team.number_of_members + 1\n            })\n        })\n        .then(\n            setTimeout(() => {\n                fetch(\"http://localhost:3000/api/v1/auto_login\", {\n                    headers: {\n                    \"authorization\": localStorage.token\n                    }\n                })\n                .then(res => res.json())\n                .then(user =>{\n                    if (user.errors){\n                    alert(user.errors)\n                    } else {\n                    this.props.setUser(user)\n                    localStorage.token = user.token\n                    this.setState({\n                        joined: true\n                    })\n                    }\n                })\n            }, 1000)\n        )\n    }\n\n    render(){\n        if(this.state.joined) return <Redirect to=\"/dashboard\" />\n        return (\n        <Fragment>\n                {\n                    this.props.dash_style?\n                    <NavLink to={`/dashboard`}>\n                        <figure style={{backgroundImage: `url(${this.props.team.logo_path})`}}>\n                            <figcaption>\n                                <h4> <span>{this.props.team.name}</span></h4>\n                                {/* <h4> <span>{this.props.team.location}</span></h4> */}\n                                <p>{this.props.team.location}</p>\n                            </figcaption>\n                        </figure>\n                    </NavLink>\n                    :\n                    null\n                }\n        </Fragment>\n        );\n        // <div onClick={this.props.profile_acc? null : this.joinTeam} className=\"regular_card\">\n        //     <h1 className=\"team_name\">{this.props.team.name}</h1>\n        //     <p className=\"team_location\">{this.props.team.location}</p>\n        //     <p className=\"team_mem_num\">{this.props.team.number_of_members}</p>\n        //     <img className=\"team_logo\" src={this.props.team.logo_path} alt=\"team_logo\" />\n        //     <h2 className=\"team_desc\">{this.props.team.description}</h2>\n        //     <div className=\"team_scores\">\n        //         <p className=\"team_score\">{this.props.team.won_games}</p>\n        //         <p className=\"team_score\">{this.props.team.tie_games}</p>\n        //         <p className=\"team_score\">{this.props.team.lost_games}</p>\n        //     </div>\n        // </div>\n        // );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp, { setUser })(TeamSearch)"]},"metadata":{},"sourceType":"module"}