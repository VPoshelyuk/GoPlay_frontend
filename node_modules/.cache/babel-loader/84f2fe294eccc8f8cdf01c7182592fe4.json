{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js\";\nimport React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass EventCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      added: false,\n      viewed: false\n    };\n\n    this.handleParticipateInEvent = () => {\n      fetch(\"http://localhost:3000/api/v1/team_events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          event_id: this.props.event.id,\n          team_id: this.props.myTeam.id\n        })\n      }).then(res => res.json()).then(this.setState({\n        added: true\n      }));\n    };\n  }\n\n  // handleViewEvent = () => {\n  //     // this.props.setevent(this.props.event)\n  //     this.setState({\n  //         viewed: true\n  //     })\n  // }\n  render() {\n    console.log(this.props);\n\n    if (this.state.added) {\n      this.setState({\n        added: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    } // if(this.state.viewed){\n    //     this.setState({\n    //         viewed: false\n    //     })\n    //     return <Redirect to={`/event/${this.props.event.id}`} />\n    // }\n    // debugger\n\n\n    return React.createElement(\"div\", {\n      onClick: this.joinTeam,\n      className: \"team_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"team_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.event.name), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.event.price), React.createElement(\"img\", {\n      className: \"team_pic\",\n      src: this.props.event.pic_path,\n      alt: \"event_pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"team_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.event.description), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.event.players_per_team), React.createElement(\"p\", {\n      className: \"team_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.event.max_number_of_teams), this.props.myTeam !== undefined && this.props.myTeam !== null ? this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined ? React.createElement(\"button\", {\n      onClick: this.handleParticipateInEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Count me in!\") : React.createElement(\"button\", {\n      onClick: this.handleChangeMyStatusOnEvent,\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"dash_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"I'll go/maybe/no\") : null);\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.userReducer.currentUser,\n    myTeam: state.teamReducer.currentTeam,\n    myGroup: state.teamReducer.currentGroup // sportId: state.teamReducer.currentSportId\n\n  };\n}\n\nexport default connect(msp)(EventCard);","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/Final_Project/goplay_frontend/src/EventCard.js"],"names":["React","Redirect","connect","EventCard","Component","state","added","viewed","handleParticipateInEvent","fetch","method","headers","body","JSON","stringify","event_id","props","event","id","team_id","myTeam","then","res","json","setState","render","console","log","joinTeam","name","price","pic_path","description","players_per_team","max_number_of_teams","undefined","attributes","events","find","marginTop","handleChangeMyStatusOnEvent","msp","currentUser","userReducer","teamReducer","currentTeam","myGroup","currentGroup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass EventCard extends React.Component{\n\n    state= {\n        added: false,\n        viewed: false\n    }\n\n    handleParticipateInEvent = () => {\n        fetch(\"http://localhost:3000/api/v1/team_events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event_id: this.props.event.id,\n                team_id: this.props.myTeam.id\n            })\n            })\n        .then(res => res.json())\n        .then(\n            this.setState({\n                added: true\n            })\n        )\n    }\n\n    // handleViewEvent = () => {\n    //     // this.props.setevent(this.props.event)\n    //     this.setState({\n    //         viewed: true\n    //     })\n    // }\n\n    render(){\n        console.log(this.props)\n        if(this.state.added){\n            this.setState({\n                added: false\n            })\n            return <Redirect to=\"/dashboard\" />\n        }\n        // if(this.state.viewed){\n        //     this.setState({\n        //         viewed: false\n        //     })\n        //     return <Redirect to={`/event/${this.props.event.id}`} />\n        // }\n        // debugger\n        return (\n        <div onClick={this.joinTeam} className=\"team_card\">\n            <h1 className=\"team_name\">{this.props.event.name}</h1>\n            <p className=\"team_location\">{this.props.event.price}</p>\n            <img className=\"team_pic\" src={this.props.event.pic_path} alt=\"event_pic\" />\n            <h2 className=\"team_desc\">{this.props.event.description}</h2>\n            <p className=\"team_location\">{this.props.event.players_per_team}</p>\n            <p className=\"team_location\">{this.props.event.max_number_of_teams}</p>\n            {this.props.myTeam !== undefined && this.props.myTeam !== null?\n                this.props.myTeam.attributes.events === undefined || this.props.myTeam.attributes.events.find(event => event.id === this.props.event.id) === undefined?\n                <button onClick={this.handleParticipateInEvent} style={{marginTop: \"50px\"}} className='dash_button'>Count me in!</button>\n                :\n                <button onClick={this.handleChangeMyStatusOnEvent} style={{marginTop: \"50px\"}} className='dash_button'>I'll go/maybe/no</button>\n                :\n                null\n            }\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.userReducer.currentUser,\n        myTeam: state.teamReducer.currentTeam,\n        myGroup: state.teamReducer.currentGroup\n        // sportId: state.teamReducer.currentSportId\n    }\n}\n\nexport default connect(msp)(EventCard)"]},"metadata":{},"sourceType":"module"}